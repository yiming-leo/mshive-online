{"version":3,"file":"js/458.1867cf9e.js","mappings":"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","sources":["webpack://mshive-online/./src/views/StatisticView.vue","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","webpack://mshive-online/./node_modules/tslib/tslib.es6.mjs","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/States.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/locales/en.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","webpack://mshive-online/./node_modules/svg-arc-to-cubic-bezier/modules/index.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/Root.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/DataProcessor.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Scrollbar.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/HierarchyDefaultTheme.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/HierarchyNode.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack://mshive-online/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/Hierarchy.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/LinkedHierarchyNode.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/HierarchyLink.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/LinkedHierarchy.js","webpack://mshive-online/./node_modules/d3-dispatch/src/dispatch.js","webpack://mshive-online/./node_modules/d3-timer/src/timer.js","webpack://mshive-online/./node_modules/d3-force/src/lcg.js","webpack://mshive-online/./node_modules/d3-force/src/simulation.js","webpack://mshive-online/./node_modules/d3-quadtree/src/add.js","webpack://mshive-online/./node_modules/d3-quadtree/src/cover.js","webpack://mshive-online/./node_modules/d3-quadtree/src/data.js","webpack://mshive-online/./node_modules/d3-quadtree/src/extent.js","webpack://mshive-online/./node_modules/d3-quadtree/src/quad.js","webpack://mshive-online/./node_modules/d3-quadtree/src/find.js","webpack://mshive-online/./node_modules/d3-quadtree/src/remove.js","webpack://mshive-online/./node_modules/d3-quadtree/src/root.js","webpack://mshive-online/./node_modules/d3-quadtree/src/size.js","webpack://mshive-online/./node_modules/d3-quadtree/src/visit.js","webpack://mshive-online/./node_modules/d3-quadtree/src/visitAfter.js","webpack://mshive-online/./node_modules/d3-quadtree/src/x.js","webpack://mshive-online/./node_modules/d3-quadtree/src/y.js","webpack://mshive-online/./node_modules/d3-quadtree/src/quadtree.js","webpack://mshive-online/./node_modules/d3-force/src/constant.js","webpack://mshive-online/./node_modules/d3-force/src/jiggle.js","webpack://mshive-online/./node_modules/d3-force/src/collide.js","webpack://mshive-online/./node_modules/d3-force/src/link.js","webpack://mshive-online/./node_modules/d3-force/src/x.js","webpack://mshive-online/./node_modules/d3-force/src/y.js","webpack://mshive-online/./node_modules/d3-force/src/manyBody.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/ForceDirected.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","webpack://mshive-online/./node_modules/d3-shape/src/constant.js","webpack://mshive-online/./node_modules/d3-shape/src/math.js","webpack://mshive-online/./node_modules/d3-path/src/path.js","webpack://mshive-online/./node_modules/d3-shape/src/path.js","webpack://mshive-online/./node_modules/d3-shape/src/arc.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DateAxis.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/BaseColumnSeries.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/ColumnSeries.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","webpack://mshive-online/./node_modules/@amcharts/amcharts5/themes/Animated.js","webpack://mshive-online/src/views/StatisticView.vue","webpack://mshive-online/./src/views/StatisticView.vue?6ab0","webpack://mshive-online/./src/views/StatisticView.vue?6b07"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',{staticClass:\"my-0 mx-0 px-0 py-0\"},[_c('v-row',[_c('v-col',[_c('v-hover',{staticClass:\"transition-swing\",scopedSlots:_vm._u([{key:\"default\",fn:function({ hover }){return [_c('v-sheet',{attrs:{\"rounded\":\"\",\"elevation\":hover ? 8 : 2}},[_c('div',{ref:\"chartdiv\",attrs:{\"id\":\"chartdiv\"}})])]}}])})],1),_c('v-col',[_c('v-hover',{staticClass:\"transition-swing\",scopedSlots:_vm._u([{key:\"default\",fn:function({ hover }){return [_c('v-sheet',{attrs:{\"rounded\":\"\",\"elevation\":hover ? 8 : 2}},[_c('div',{ref:\"piechartdiv\",attrs:{\"id\":\"piechartdiv\"}})])]}}])})],1)],1),_c('v-row',[_c('v-col',[_c('v-hover',{staticClass:\"transition-swing\",scopedSlots:_vm._u([{key:\"default\",fn:function({ hover }){return [_c('v-sheet',{attrs:{\"rounded\":\"\",\"elevation\":hover ? 8 : 2}},[_c('div',{ref:\"ganttchartdiv\",attrs:{\"id\":\"ganttchartdiv\"}})])]}}])})],1),_c('v-col',[_c('v-hover',{staticClass:\"transition-swing\",scopedSlots:_vm._u([{key:\"default\",fn:function({ hover }){return [_c('v-sheet',{attrs:{\"rounded\":\"\",\"elevation\":hover ? 8 : 2}},[_c('div',{ref:\"xychartdiv\",attrs:{\"id\":\"xychartdiv\"}})])]}}])})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            if (this.autoDispose) {\r\n                $array.each(this._values, (x) => {\r\n                    x.dispose();\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p1000`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    //console.log(type, dom);\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    //console.log(event);\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n            $object.each(styles, (key, value) => {\r\n                this.setStyle(key, value);\r\n            });\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = new CSSStyleRule();\r\n        }\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return wtz;\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function unshiftThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.unshift(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function pushThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.push(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return true;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return false;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.4.11\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_playingAnimations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (!this.isDisposed()) {\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation._stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation._playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation._stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation._playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n            });\r\n            return this._playingAnimations !== 0;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @ignore\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            --this._playingAnimations;\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            --this._playingAnimations;\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                ++this._playingAnimations;\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                ++this._playingAnimations;\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!(key in this._settings)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!(key in this._settings)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes() {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    return !(bounds1.bottom < bounds2.top || bounds2.bottom < bounds1.top || bounds1.right < bounds2.left || bounds2.right < bounds1.left);\r\n}\r\n//# sourceMappingURL=Math.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite._trustBounds) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_trustBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => this.showTooltip(), 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\")) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", false);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n            }\r\n            let x = e.point.x - dragEvent.point.x;\r\n            let y = e.point.y - dragEvent.point.y;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\") && this.isFocus()) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        this.showTooltip();\r\n        this._handleOver();\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        this.hideTooltip();\r\n        this._handleOut();\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        const tooltip = this.getTooltip();\r\n        const tooltipText = this.get(\"tooltipText\");\r\n        const tooltipHTML = this.get(\"tooltipHTML\");\r\n        if ((tooltipText || tooltipHTML) && tooltip) {\r\n            const tooltipPosition = this.get(\"tooltipPosition\");\r\n            const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n            if (tooltipPosition == \"fixed\" || !point) {\r\n                this._display._setMatrix();\r\n                point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n            }\r\n            tooltip.set(\"pointTo\", point);\r\n            tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n            if (!tooltip.get(\"x\")) {\r\n                tooltip.set(\"x\", point.x);\r\n            }\r\n            if (!tooltip.get(\"y\")) {\r\n                tooltip.set(\"y\", point.y);\r\n            }\r\n            if (tooltipText) {\r\n                tooltip.label.set(\"text\", tooltipText);\r\n            }\r\n            if (tooltipHTML) {\r\n                tooltip.label.set(\"html\", tooltipHTML);\r\n            }\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                tooltip.label._setDataItem(dataItem);\r\n            }\r\n            if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                this.hideTooltip();\r\n                return;\r\n            }\r\n            tooltip.label.text.markDirtyText();\r\n            const promise = tooltip.show();\r\n            this.setPrivateRaw(\"showingTooltip\", true);\r\n            return promise;\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"color\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fill\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            this._display.clear();\r\n            this._backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                this._backgroundDisplay.beginFill(fill, fillOpacity);\r\n                this._backgroundDisplay.drawRect(0, 0, width, height);\r\n                this._backgroundDisplay.endFill();\r\n            }\r\n            this._display.angle = this.get(\"rotation\", 0);\r\n            //this._display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(this._display, this._backgroundDisplay, repetition, width, height);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw) {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            //const bounds = this._display.getLocalBounds();\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fillPattern) {\r\n                let changed = false;\r\n                if (fill && (!fillPattern.get(\"fill\") || fillPattern.get(\"fillInherited\"))) {\r\n                    fillPattern.set(\"fill\", fill);\r\n                    fillPattern.set(\"fillInherited\", true);\r\n                    changed = true;\r\n                }\r\n                if (stroke && (!fillPattern.get(\"color\") || fillPattern.get(\"colorInherited\"))) {\r\n                    fillPattern.set(\"color\", stroke);\r\n                    fillPattern.set(\"colorInherited\", true);\r\n                    changed = true;\r\n                }\r\n                if (changed) {\r\n                    // @todo: is this OK?\r\n                    fillPattern._changed();\r\n                }\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            else if (fill) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                if (strokePattern) {\r\n                    let changed = false;\r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    const pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                else if (stroke) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin);\r\n                    this._display.endStroke();\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_trustBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes() {\r\n        if (super._applyThemes()) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes();\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        let width = this.get(\"width\");\r\n        let height = this.get(\"height\");\r\n        let pWidth = this.getPrivate(\"width\");\r\n        let pHeight = this.getPrivate(\"height\");\r\n        let bounds = {\r\n            left: 0,\r\n            top: 0,\r\n            right: this.width(),\r\n            bottom: this.height(),\r\n        };\r\n        let layout = this.get(\"layout\");\r\n        let horizontal = false;\r\n        let vertical = false;\r\n        if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n            horizontal = true;\r\n        }\r\n        if (layout instanceof VerticalLayout) {\r\n            vertical = true;\r\n        }\r\n        if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n            // void\r\n        }\r\n        else {\r\n            let m = Number.MAX_VALUE;\r\n            let l = m;\r\n            let r = -m;\r\n            let t = m;\r\n            let b = -m;\r\n            const paddingLeft = this.get(\"paddingLeft\", 0);\r\n            const paddingTop = this.get(\"paddingTop\", 0);\r\n            const paddingRight = this.get(\"paddingRight\", 0);\r\n            const paddingBottom = this.get(\"paddingBottom\", 0);\r\n            this.children.each((child) => {\r\n                if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                    let childBounds = child.adjustedLocalBounds();\r\n                    let childX = child.x();\r\n                    let childY = child.y();\r\n                    let cl = childX + childBounds.left;\r\n                    let cr = childX + childBounds.right;\r\n                    let ct = childY + childBounds.top;\r\n                    let cb = childY + childBounds.bottom;\r\n                    if (horizontal) {\r\n                        cl -= child.get(\"marginLeft\", 0);\r\n                        cr += child.get(\"marginRight\", 0);\r\n                    }\r\n                    if (vertical) {\r\n                        ct -= child.get(\"marginTop\", 0);\r\n                        cb += child.get(\"marginBottom\", 0);\r\n                    }\r\n                    if (cl < l) {\r\n                        l = cl;\r\n                    }\r\n                    if (cr > r) {\r\n                        r = cr;\r\n                    }\r\n                    if (ct < t) {\r\n                        t = ct;\r\n                    }\r\n                    if (cb > b) {\r\n                        b = cb;\r\n                    }\r\n                }\r\n            });\r\n            if (l == m) {\r\n                l = 0;\r\n            }\r\n            if (r == -m) {\r\n                r = 0;\r\n            }\r\n            if (t == m) {\r\n                t = 0;\r\n            }\r\n            if (b == -m) {\r\n                b = 0;\r\n            }\r\n            bounds.left = l - paddingLeft;\r\n            bounds.top = t - paddingTop;\r\n            bounds.right = r + paddingRight;\r\n            bounds.bottom = b + paddingBottom;\r\n        }\r\n        this._contentWidth = bounds.right - bounds.left;\r\n        this._contentHeight = bounds.bottom - bounds.top;\r\n        if ($type.isNumber(width)) {\r\n            bounds.left = 0;\r\n            bounds.right = width;\r\n        }\r\n        if ($type.isNumber(pWidth)) {\r\n            bounds.left = 0;\r\n            bounds.right = pWidth;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = height;\r\n        }\r\n        if ($type.isNumber(pHeight)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = pHeight;\r\n        }\r\n        this._localBounds = bounds;\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        const fi = \"forceInactive\";\r\n        if (this.isDirty(fi)) {\r\n            const forceInactive = this.get(fi);\r\n            this.walkChildren((child) => {\r\n                child.set(fi, forceInactive);\r\n            });\r\n            const background = this.get(\"background\");\r\n            if (background) {\r\n                background.set(fi, forceInactive);\r\n            }\r\n        }\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            const html = this.get(\"html\");\r\n            if (html && html !== \"\") {\r\n                this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n            }\r\n            else {\r\n                this._root._removeHTMLContent(this);\r\n            }\r\n            this._root._positionHTMLElement(this);\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            let fill = this.get(\"fill\");\r\n            if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        const text = this.get(\"text\", \"\");\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        if (this.isDirty(\"maxHeight\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            this._text.set(\"text\", this.get(\"text\"));\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\");\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\");\r\n                }\r\n            }\r\n            this.text.set(\"x\", x);\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        if (this.text.get(\"populateText\")) {\r\n            this.text.markDirtyText();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        this.set(\"background\", PointedRectangle.new(this._root, {\r\n            themeTags: [\"tooltip\", \"background\"]\r\n        }));\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                $utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                });\r\n                $utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                });\r\n            }\r\n        }));\r\n        this._root._tooltips.push(this);\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    dispose() {\r\n        super.dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            let d = Math.pow(10, details.decimals.passive);\r\n            value = Math.round(value * d) / d;\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    format(source, format) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        if (timezone && !this._root.utc) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format) {\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this._root.utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            let ints = Math.floor(tstamp / this._getUnitValue(unit));\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * this._getUnitValue(unit);\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            //let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n            //console.log(maxUnit, diffUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive() {\r\n        return this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask() {\r\n        return this._isInteractive();\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(parentLayer) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask()) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            this._render(parentLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(parentLayer) {\r\n        if (this.exportable === false) {\r\n            const layer = this._layer || parentLayer;\r\n            layer.tainted = true;\r\n        }\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask() {\r\n        return this.interactiveChildren || super._isInteractiveMask();\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        const layer = this._layer || parentLayer;\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(layer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    path(_context) { }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        const layer = this._layer || parentLayer;\r\n        const layerDirty = layer.dirty;\r\n        const interactive = this._isInteractive();\r\n        if (layerDirty || interactive) {\r\n            const context = layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (interactive) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (interactive) {\r\n                    op.path(ghostContext);\r\n                    op.colorize(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(layer, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(layer);\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive() && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive() && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(parentLayer) {\r\n        const layer = this._layer || parentLayer;\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(layer);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive();\r\n            const context = layer.context;\r\n            const layerDirty = layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(layer);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (this._isInteractive()) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        context.save();\r\n                        context.beginPath();\r\n                        if (chunk.fill) {\r\n                            context.strokeStyle = chunk.fill.toCSS();\r\n                        }\r\n                        else if (this.style.fill && this.style.fill instanceof Color) {\r\n                            context.strokeStyle = this.style.fill.toCSS();\r\n                        }\r\n                        context.lineWidth = thickness * offset;\r\n                        context.moveTo(offsetX, y);\r\n                        context.lineTo(offsetX + chunk.width, y);\r\n                        context.stroke();\r\n                        context.restore();\r\n                    }\r\n                    if (interactive && this.interactive) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure(this.getLayer());\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(layer) {\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(layer, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale || this._originalScale == 1) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(parentLayer) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(parentLayer);\r\n                break;\r\n            default:\r\n                super._render(parentLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(parentLayer) {\r\n        if (this.textVisible) {\r\n            const layer = this._layer || parentLayer;\r\n            this._prerender(layer);\r\n            const interactive = this._isInteractive();\r\n            const context = layer.context;\r\n            const layerDirty = layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(layer);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(layer) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(layer);\r\n            default:\r\n                return super._measure(layer);\r\n        }\r\n    }\r\n    _measureCircular(layer) {\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(layer, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    const chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (rtl) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        if (this.image) {\r\n            const layer = this._layer || parentLayer;\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            if (layer.dirty) {\r\n                if (this.shadowColor) {\r\n                    layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive()) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render(this.defaultLayer);\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    if (ev.keyCode == 16) {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (ev.keyCode == 9) {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    if (ev.keyCode == 16) {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.keyCode == 27) {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        switch (ev.keyCode) {\r\n                            case 13:\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case 37:\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case 39:\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case 38:\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case 40:\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const keyCode = ev.keyCode;\r\n                        switch (keyCode) {\r\n                            case 37:\r\n                            case 39:\r\n                            case 38:\r\n                            case 40:\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (keyCode == 39 || keyCode == 40) ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        $array.keepIf(this._animations, (animation) => {\r\n            return animation._runAnimation(currentTime);\r\n        });\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                this._animations.length === 0 &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirty[entity.uid] = entity;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyParent(parent) {\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._isDirtyParents = true;\r\n            this._dirtyParents[parent.uid] = parent;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirtyBounds[entity.uid] = entity;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addAnimation(animation) {\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev, index);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev, index);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        let x = bounds.left - 2;\r\n        let y = bounds.top - 2;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + 4) + \"px\";\r\n        focusElement.style.height = (height + 4) + \"px\";\r\n    }\r\n    _handleFocus(ev, index) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        const focused = this._tabindexes[index];\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        focusableElements[index].focus();\r\n    }\r\n    _handleBlur(ev, _index) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        container.append(htmlElement);\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            const bounds = target.globalBounds();\r\n            htmlElement.style.top = (bounds.top) + \"px\";\r\n            htmlElement.style.left = (bounds.left) + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                w = bbox.width;\r\n                h = bbox.height;\r\n                target._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n                target.setPrivate(\"minWidth\", w);\r\n                target.setPrivate(\"minHeight\", h);\r\n            }\r\n            else {\r\n                target.removePrivate(\"minWidth\");\r\n                target.removePrivate(\"minHeight\");\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n            //console.log(newValue)\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeDataItem(data) {\r\n        let dataItem = new DataItem(this, undefined, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    pushDataItem(data) {\r\n        const dataItem = this.makeDataItem(data);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            let month = date.getUTCMonth();\r\n            date.setUTCMonth(month + count);\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        //console.log(parsedDate)\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newOffset = date.getTimezoneOffset();\r\n        if (newOffset != timeZoneOffset) {\r\n            date.setTime(date.getTime() + (timeZoneOffset - newOffset) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            let sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                sprite.setRaw(\"position\", \"absolute\");\r\n                this.bulletsContainer.children.push(sprite);\r\n            }\r\n            bullet._index = index;\r\n            bullet.series = this;\r\n            dataItem.bullets.push(bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                let value = dataItem.get(key);\r\n                if (value != null) {\r\n                    count[key]++;\r\n                    sum[key] += value;\r\n                    absSum[key] += Math.abs(value);\r\n                    average[key] = sum[key] / count[key];\r\n                    if (low[key] > value || low[key] == null) {\r\n                        low[key] = value;\r\n                    }\r\n                    if (high[key] < value || high[key] == null) {\r\n                        high[key] = value;\r\n                    }\r\n                    close[key] = value;\r\n                    if (open[key] == null) {\r\n                        open[key] = value;\r\n                        previous[key] = value;\r\n                        if (baseValueSeries) {\r\n                            open[openKey] = baseValueSeries._getBase(openKey);\r\n                        }\r\n                    }\r\n                    if (startIndex === 0) {\r\n                        dataItem.setRaw((change), value - open[openKey]);\r\n                        dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    }\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    previous[key] = value;\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            if (this.bullets.length > 0) {\r\n                let count = this.dataItems.length;\r\n                let startIndex = this.startIndex();\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < count) {\r\n                    endIndex++;\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                for (let i = 0; i < startIndex; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n                for (let i = startIndex; i < endIndex; i++) {\r\n                    this._positionBullets(this.dataItems[i]);\r\n                }\r\n                for (let i = endIndex; i < count; i++) {\r\n                    this._hideBullets(this.dataItems[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template]))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template]))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template]))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\r\n                    itemContainer.markDirtyAccessibility();\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                });\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    let clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                const targetA = a.dataItem.dataContext;\r\n                const targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    const indexA = this.data.indexOf(targetA);\r\n                    const indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\r\nexport class DataProcessor extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_checkDates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkNumbers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkEmpty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkDeep\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._checkFeatures();\r\n        this.on(\"dateFields\", () => this._checkFeatures());\r\n        this.on(\"dateFormat\", () => this._checkFeatures());\r\n        this.on(\"numericFields\", () => this._checkFeatures());\r\n        this.on(\"colorFields\", () => this._checkFeatures());\r\n        this.on(\"emptyAs\", () => this._checkFeatures());\r\n    }\r\n    _checkFeatures() {\r\n        if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\r\n            this._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"numericFields\")) {\r\n            this._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"colorFields\")) {\r\n            this._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"emptyAs\")) {\r\n            this._checkEmpty = this.get(\"emptyAs\") != null;\r\n        }\r\n        this._checkDeepFeatures();\r\n    }\r\n    _checkDeepFeatures() {\r\n        const deepFields = [];\r\n        $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], (where) => {\r\n            $array.each(this.get(where, []), (field) => {\r\n                const steps = field.split(\".\");\r\n                steps.pop();\r\n                while (steps.length > 0) {\r\n                    deepFields.push(steps.join(\".\"));\r\n                    steps.pop();\r\n                }\r\n            });\r\n        });\r\n        this._checkDeep = deepFields.length > 0;\r\n        this.setPrivate(\"deepFields\", deepFields);\r\n    }\r\n    /**\r\n     * Processess entire array of data.\r\n     *\r\n     * NOTE: calling this will modify original array!\r\n     */\r\n    processMany(data) {\r\n        if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\r\n            $array.each(data, (row) => {\r\n                this.processRow(row);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Processes a row (object) of data.\r\n     *\r\n     * NOTE: calling this will modify values of the original object!\r\n     */\r\n    processRow(row, prefix = \"\") {\r\n        $object.each(row, (key, _value) => {\r\n            const lookupKey = prefix + key;\r\n            if (this._checkEmpty) {\r\n                row[key] = this._maybeToEmpty(row[key]);\r\n            }\r\n            if (this._checkNumbers) {\r\n                row[key] = this._maybeToNumber(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDates) {\r\n                row[key] = this._maybeToDate(lookupKey, row[key]);\r\n            }\r\n            if (this._checkColors) {\r\n                row[key] = this._maybeToColor(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDeep && this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\r\n                this.processRow(row[key], lookupKey + \".\");\r\n            }\r\n        });\r\n    }\r\n    _maybeToNumber(field, value) {\r\n        if (this.get(\"numericFields\").indexOf(field) !== -1) {\r\n            return $type.toNumber(value);\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToDate(field, value) {\r\n        if (this.get(\"dateFields\").indexOf(field) !== -1) {\r\n            return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToEmpty(value) {\r\n        if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\r\n            return this.get(\"emptyAs\");\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToColor(field, value) {\r\n        if (this.get(\"colorFields\").indexOf(field) !== -1) {\r\n            return Color.fromAny(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n//# sourceMappingURL=DataProcessor.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Button } from \"./Button\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\r\n */\r\nexport class Scrollbar extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A thumb elment - a draggable square between the grips, used for panning\r\n         * the selection.\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeThumb()\r\n        });\r\n        /**\r\n         * Start grip button.\r\n         */\r\n        Object.defineProperty(this, \"startGrip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeButton()\r\n        });\r\n        /**\r\n         * End grip button.\r\n         */\r\n        Object.defineProperty(this, \"endGrip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeButton()\r\n        });\r\n        Object.defineProperty(this, \"_thumbBusy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_startDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_endDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_thumbDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_gripDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _addOrientationClass() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", this._settings.orientation]);\r\n        if (!this._settings.background) {\r\n            this._settings.background = RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"main\", \"background\"])\r\n            });\r\n        }\r\n    }\r\n    _makeButton() {\r\n        return this.children.push(Button.new(this._root, {\r\n            themeTags: [\"resize\", \"button\", this.get(\"orientation\")], icon: Graphics.new(this._root, {\r\n                themeTags: [\"icon\"]\r\n            })\r\n        }));\r\n    }\r\n    _makeThumb() {\r\n        return this.children.push(RoundedRectangle.new(this._root, {\r\n            themeTags: [\"thumb\", this.get(\"orientation\")]\r\n        }));\r\n    }\r\n    _handleAnimation(animation) {\r\n        if (animation) {\r\n            this._disposers.push(animation.events.on(\"stopped\", () => {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n                this._thumbBusy = false;\r\n            }));\r\n        }\r\n    }\r\n    _afterNew() {\r\n        this._addOrientationClass();\r\n        super._afterNew();\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        const thumb = this.thumb;\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            this._disposers.push(background.events.on(\"click\", (event) => {\r\n                this.setPrivateRaw(\"isBusy\", true);\r\n                const point = this._display.toLocal(event.point);\r\n                const w = this.width();\r\n                const h = this.height();\r\n                const orientation = this.get(\"orientation\");\r\n                let newMiddle;\r\n                if (orientation == \"vertical\") {\r\n                    newMiddle = (point.y - thumb.height() / 2) / h;\r\n                }\r\n                else {\r\n                    newMiddle = (point.x - thumb.width() / 2) / w;\r\n                }\r\n                let newCoordinate;\r\n                let key;\r\n                if (orientation == \"vertical\") {\r\n                    newCoordinate = newMiddle * h;\r\n                    key = \"y\";\r\n                }\r\n                else {\r\n                    newCoordinate = newMiddle * w;\r\n                    key = \"x\";\r\n                }\r\n                const duration = this.get(\"animationDuration\", 0);\r\n                if (duration > 0) {\r\n                    this._thumbBusy = true;\r\n                    this._handleAnimation(this.thumb.animate({ key: key, to: newCoordinate, duration: duration, easing: this.get(\"animationEasing\") }));\r\n                }\r\n                else {\r\n                    this.thumb.set(key, newCoordinate);\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this.setPrivateRaw(\"isBusy\", false);\r\n                    });\r\n                }\r\n            }));\r\n        }\r\n        this._disposers.push(thumb.events.on(\"dblclick\", (event) => {\r\n            if (!$utils.isLocalEvent(event.originalEvent, this)) {\r\n                return;\r\n            }\r\n            const duration = this.get(\"animationDuration\", 0);\r\n            const easing = this.get(\"animationEasing\");\r\n            this.animate({ key: \"start\", to: 0, duration: duration, easing: easing });\r\n            this.animate({ key: \"end\", to: 1, duration: duration, easing: easing });\r\n        }));\r\n        this._disposers.push(startGrip.events.on(\"pointerdown\", () => {\r\n            this.setPrivateRaw(\"isBusy\", true);\r\n            this._startDown = true;\r\n            this._gripDown = \"start\";\r\n        }));\r\n        this._disposers.push(endGrip.events.on(\"pointerdown\", () => {\r\n            this.setPrivateRaw(\"isBusy\", true);\r\n            this._endDown = true;\r\n            this._gripDown = \"end\";\r\n        }));\r\n        this._disposers.push(thumb.events.on(\"pointerdown\", () => {\r\n            this.setPrivateRaw(\"isBusy\", true);\r\n            this._thumbDown = true;\r\n            this._gripDown = undefined;\r\n        }));\r\n        this._disposers.push(startGrip.events.on(\"globalpointerup\", () => {\r\n            if (this._startDown) {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n            }\r\n            this._startDown = false;\r\n        }));\r\n        this._disposers.push(endGrip.events.on(\"globalpointerup\", () => {\r\n            if (this._endDown) {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n            }\r\n            this._endDown = false;\r\n        }));\r\n        this._disposers.push(thumb.events.on(\"globalpointerup\", () => {\r\n            if (this._thumbDown) {\r\n                this.setPrivateRaw(\"isBusy\", false);\r\n            }\r\n            this._thumbDown = false;\r\n        }));\r\n        this._disposers.push(startGrip.on(\"x\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(endGrip.on(\"x\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(startGrip.on(\"y\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(endGrip.on(\"y\", () => {\r\n            this._updateThumb();\r\n        }));\r\n        this._disposers.push(thumb.events.on(\"positionchanged\", () => {\r\n            this._updateGripsByThumb();\r\n        }));\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            startGrip.set(\"x\", 0);\r\n            endGrip.set(\"x\", 0);\r\n            this._disposers.push(thumb.adapters.add(\"y\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.height() - thumb.height()), 0);\r\n            }));\r\n            this._disposers.push(thumb.adapters.add(\"x\", (_value) => {\r\n                return this.width() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"x\", (_value) => {\r\n                return this.width() / 2;\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"x\", (_value) => {\r\n                return this.width() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"y\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.height()), 0);\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"y\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.height()), 0);\r\n            }));\r\n        }\r\n        else {\r\n            startGrip.set(\"y\", 0);\r\n            endGrip.set(\"y\", 0);\r\n            this._disposers.push(thumb.adapters.add(\"x\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.width() - thumb.width()), 0);\r\n            }));\r\n            this._disposers.push(thumb.adapters.add(\"y\", (_value) => {\r\n                return this.height() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"y\", (_value) => {\r\n                return this.height() / 2;\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"y\", (_value) => {\r\n                return this.height() / 2;\r\n            }));\r\n            this._disposers.push(startGrip.adapters.add(\"x\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.width()), 0);\r\n            }));\r\n            this._disposers.push(endGrip.adapters.add(\"x\", (value) => {\r\n                return Math.max(Math.min(Number(value), this.width()), 0);\r\n            }));\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"end\") || this.isDirty(\"start\") || this._sizeDirty) {\r\n            this.updateGrips();\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const eventType = \"rangechanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this, start: this.get(\"start\", 0), end: this.get(\"end\", 1), grip: this._gripDown });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrips() {\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        const orientation = this.get(\"orientation\");\r\n        const height = this.height();\r\n        const width = this.width();\r\n        if (orientation == \"vertical\") {\r\n            startGrip.set(\"y\", height * this.get(\"start\", 0));\r\n            endGrip.set(\"y\", height * this.get(\"end\", 1));\r\n        }\r\n        else {\r\n            startGrip.set(\"x\", width * this.get(\"start\", 0));\r\n            endGrip.set(\"x\", width * this.get(\"end\", 1));\r\n        }\r\n        const valueFunction = this.getPrivate(\"positionTextFunction\");\r\n        const from = Math.round(this.get(\"start\", 0) * 100);\r\n        const to = Math.round(this.get(\"end\", 0) * 100);\r\n        let fromValue;\r\n        let toValue;\r\n        if (valueFunction) {\r\n            fromValue = valueFunction.call(this, this.get(\"start\", 0));\r\n            toValue = valueFunction.call(this, this.get(\"end\", 0));\r\n        }\r\n        else {\r\n            fromValue = from + \"%\";\r\n            toValue = to + \"%\";\r\n        }\r\n        startGrip.set(\"ariaLabel\", this._t(\"From %1\", undefined, fromValue));\r\n        startGrip.set(\"ariaValueNow\", \"\" + from);\r\n        startGrip.set(\"ariaValueText\", from + \"%\");\r\n        startGrip.set(\"ariaValueMin\", \"0\");\r\n        startGrip.set(\"ariaValueMax\", \"100\");\r\n        endGrip.set(\"ariaLabel\", this._t(\"To %1\", undefined, toValue));\r\n        endGrip.set(\"ariaValueNow\", \"\" + to);\r\n        endGrip.set(\"ariaValueText\", to + \"%\");\r\n        endGrip.set(\"ariaValueMin\", \"0\");\r\n        endGrip.set(\"ariaValueMax\", \"100\");\r\n    }\r\n    _updateThumb() {\r\n        const thumb = this.thumb;\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        const height = this.height();\r\n        const width = this.width();\r\n        let x0 = startGrip.x();\r\n        let x1 = endGrip.x();\r\n        let y0 = startGrip.y();\r\n        let y1 = endGrip.y();\r\n        let start = 0;\r\n        let end = 1;\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            if ($type.isNumber(y0) && $type.isNumber(y1)) {\r\n                if (!this._thumbBusy && !thumb.isDragging()) {\r\n                    thumb.set(\"height\", y1 - y0);\r\n                    thumb.set(\"y\", y0);\r\n                }\r\n                start = y0 / height;\r\n                end = y1 / height;\r\n            }\r\n        }\r\n        else {\r\n            if ($type.isNumber(x0) && $type.isNumber(x1)) {\r\n                if (!this._thumbBusy && !thumb.isDragging()) {\r\n                    thumb.set(\"width\", x1 - x0);\r\n                    thumb.set(\"x\", x0);\r\n                }\r\n                start = x0 / width;\r\n                end = x1 / width;\r\n            }\r\n        }\r\n        if (this.getPrivate(\"isBusy\") && (this.get(\"start\") != start || this.get(\"end\") != end)) {\r\n            this.set(\"start\", start);\r\n            this.set(\"end\", end);\r\n        }\r\n        const valueFunction = this.getPrivate(\"positionTextFunction\");\r\n        const from = Math.round(this.get(\"start\", 0) * 100);\r\n        const to = Math.round(this.get(\"end\", 0) * 100);\r\n        let fromValue;\r\n        let toValue;\r\n        if (valueFunction) {\r\n            fromValue = valueFunction.call(this, this.get(\"start\", 0));\r\n            toValue = valueFunction.call(this, this.get(\"end\", 0));\r\n        }\r\n        else {\r\n            fromValue = from + \"%\";\r\n            toValue = to + \"%\";\r\n        }\r\n        thumb.set(\"ariaLabel\", this._t(\"From %1 to %2\", undefined, fromValue, toValue));\r\n        thumb.set(\"ariaValueNow\", \"\" + from);\r\n        thumb.set(\"ariaValueText\", from + \"%\");\r\n    }\r\n    _updateGripsByThumb() {\r\n        const thumb = this.thumb;\r\n        const startGrip = this.startGrip;\r\n        const endGrip = this.endGrip;\r\n        if (this.get(\"orientation\") == \"vertical\") {\r\n            const thumbSize = thumb.height();\r\n            startGrip.set(\"y\", thumb.y());\r\n            endGrip.set(\"y\", thumb.y() + thumbSize);\r\n        }\r\n        else {\r\n            const thumbSize = thumb.width();\r\n            startGrip.set(\"x\", thumb.x());\r\n            endGrip.set(\"x\", thumb.x() + thumbSize);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Scrollbar, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Scrollbar\"\r\n});\r\nObject.defineProperty(Scrollbar, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Scrollbar.className])\r\n});\r\n//# sourceMappingURL=Scrollbar.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const gridLayout = this._root.gridLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/hierarchy\r\n         * ========================================================================\r\n         */\r\n        r(\"Hierarchy\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{sum.formatNumber('#.#')}\",\r\n            width: p100,\r\n            height: p100,\r\n            colors: ColorSet.new(this._root, { step: 2 }),\r\n            downDepth: 1,\r\n            initialDepth: 5,\r\n            singleBranchOnly: true,\r\n            maskContent: true,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"HierarchyNode\").setAll({\r\n            toggleKey: \"disabled\",\r\n            setStateOnChildren: true,\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            cursorOverStyle: \"pointer\",\r\n            tooltipText: \"{category}: {sum}\"\r\n        });\r\n        r(\"HierarchyNode\", [\"last\"]).setAll({\r\n            cursorOverStyle: \"default\"\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n            rule.setAll({\r\n                centerX: p50,\r\n                centerY: p50,\r\n                position: \"absolute\",\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingRight: 4,\r\n                paddingLeft: 4,\r\n                text: \"{category}\",\r\n                populateText: true,\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        {\r\n            const rule = r(\"HierarchyLink\");\r\n            rule.setAll({\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                strength: 0.9,\r\n                distance: 1.1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n            position: \"absolute\",\r\n            fillOpacity: 1,\r\n            strokeOpacity: 0,\r\n            radius: 15,\r\n            tooltipY: 0\r\n        });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n            position: \"absolute\",\r\n            opacity: 1,\r\n            fillOpacity: 0,\r\n            strokeDasharray: 0,\r\n            strokeOpacity: 1,\r\n            radius: 15,\r\n            scale: 1.1,\r\n            interactive: false\r\n        });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: BreadcrumbBar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"BreadcrumbBar\").setAll({\r\n            paddingLeft: 8,\r\n            layout: gridLayout\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\"]);\r\n            rule.setAll({\r\n                paddingRight: 4,\r\n                paddingLeft: 4,\r\n                cursorOverStyle: \"pointer\",\r\n                populateText: true,\r\n                text: \"{category}:\",\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n            rule.setAll({\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                fontWeight: \"bold\",\r\n                cursorOverStyle: \"default\"\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Partition\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Partition\").setAll({\r\n            downDepth: 1,\r\n            upDepth: 0,\r\n            initialDepth: 5\r\n        });\r\n        r(\"HierarchyNode\", [\"partition\"]).setAll({\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n            opacity: 1,\r\n            visible: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"partition\", \"node\"]);\r\n            rule.setAll({\r\n                x: p50,\r\n                y: p50,\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                rotation: 90,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        r(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n            rotation: 0\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n            fillOpacity: 0.75\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Sunburst\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sunburst\").setAll({\r\n            singleBranchOnly: true\r\n        });\r\n        r(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n            opacity: 0,\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n            fillOpacity: 0.75\r\n        });\r\n        {\r\n            const rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n            rule.setAll({\r\n                x: 0,\r\n                y: 0,\r\n                textType: \"radial\",\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                centerX: p50,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4,\r\n                baseRadius: p50,\r\n                rotation: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: ForceDirected\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"ForceDirected\").setAll({\r\n            minRadius: percent(1),\r\n            maxRadius: percent(8),\r\n            initialFrames: 500,\r\n            centerStrength: 0.8,\r\n            manyBodyStrength: -14,\r\n            velocityDecay: 0.5,\r\n            linkWithStrength: 0.5,\r\n            showOnFrame: 10,\r\n            singleBranchOnly: false,\r\n            upDepth: Infinity,\r\n            downDepth: 1,\r\n            initialDepth: 5,\r\n            topDepth: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Tree\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tree\").setAll({\r\n            orientation: \"vertical\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            singleBranchOnly: false,\r\n            upDepth: Infinity,\r\n            downDepth: 1,\r\n            initialDepth: 5,\r\n            topDepth: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Pack\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pack\").setAll({\r\n            paddingLeft: 20,\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingRight: 20,\r\n            nodePadding: 0\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"pack\", \"node\"]);\r\n            rule.setAll({\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                fillOpacity: 0.8,\r\n                strokeWidth: 1,\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"LinkedHierarchyNode\").setAll({\r\n            draggable: true\r\n        });\r\n        r(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Treemap\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Treemap\").setAll({\r\n            upDepth: 0,\r\n            layoutAlgorithm: \"squarify\"\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n            rule.setAll({\r\n                x: p50,\r\n                y: p50,\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        r(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n            tooltipY: percent(40),\r\n            isMeasured: false,\r\n            position: \"absolute\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 0,\r\n                fillOpacity: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Voronoi Treemap\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            r(\"VoronoiTreemap\").setAll({\r\n                type: \"polygon\",\r\n                minWeightRatio: 0.005,\r\n                convergenceRatio: 0.005,\r\n                maxIterationCount: 100,\r\n                singleBranchOnly: true\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"voronoitreemap\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        {\r\n            r(\"Polygon\", [\"hierarchy\", \"node\", \"shape\", \"depth1\"]).setAll({\r\n                strokeWidth: 3\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"voronoitreemap\"]);\r\n            rule.setAll({\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4,\r\n                layer: 30\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=HierarchyDefaultTheme.js.map","import { Container } from \"../../core/render/Container\";\r\n/**\r\n * Base class for hierarchy nodes.\r\n */\r\nexport class HierarchyNode extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Related series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_clickDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.states.create(\"disabled\", {});\r\n        this.states.create(\"hover\", {});\r\n        this.states.create(\"hoverDisabled\", {});\r\n        this.on(\"disabled\", () => {\r\n            const dataItem = this.dataItem;\r\n            if (!dataItem.get(\"children\")) {\r\n                this.set(\"disabled\", true);\r\n                return;\r\n            }\r\n            const disabled = this.get(\"disabled\");\r\n            const series = this.series;\r\n            if (dataItem && series) {\r\n                if (dataItem.get(\"disabled\") != disabled) {\r\n                    if (disabled) {\r\n                        series.disableDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        series.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            const toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey == \"disabled\") {\r\n                this._clickDisposer = this.events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        let series = this.series;\r\n                        if (series) {\r\n                            series.selectDataItem(this.dataItem);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._clickDisposer) {\r\n                    this._clickDisposer.dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(HierarchyNode, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HierarchyNode\"\r\n});\r\nObject.defineProperty(HierarchyNode, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([HierarchyNode.className])\r\n});\r\n//# sourceMappingURL=HierarchyNode.js.map","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","import { __awaiter } from \"tslib\";\r\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { DataItem } from \"../../core/render/Component\";\r\nimport { HierarchyNode } from \"./HierarchyNode\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as d3hierarchy from \"d3-hierarchy\";\r\n;\r\n/**\r\n * A base class for all hierarchy charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\r\n */\r\nexport class Hierarchy extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] that nodes are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"nodesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_rootNode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_treeData\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"hierarchy\"\r\n        });\r\n        /**\r\n         * A list of nodes in a [[Hierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<HierarchyNode>\r\n         */\r\n        Object.defineProperty(this, \"nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => HierarchyNode.new(this._root, {\r\n                themeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\r\n            }, this.nodes.template))\r\n        });\r\n        /**\r\n         * A list of label elements in a [[Hierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label.new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\r\n            }, this.labels.template))\r\n        });\r\n        Object.defineProperty(this, \"_currentDownDepth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeNode(dataItem) {\r\n        const childData = dataItem.get(\"childData\");\r\n        const node = this.nodes.make();\r\n        node.series = this;\r\n        node._setDataItem(dataItem);\r\n        this.nodes.push(node);\r\n        dataItem.setRaw(\"node\", node);\r\n        const label = this.labels.make();\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        if (!childData || childData.length == 0) {\r\n            node.addTag(\"last\");\r\n        }\r\n        const depth = dataItem.get(\"depth\");\r\n        node.addTag(\"depth\" + depth);\r\n        this.nodesContainer.children.push(node);\r\n        node.children.push(label);\r\n        return node;\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\r\n        this.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\r\n        this.children.push(this.bulletsContainer);\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this._valuesDirty) {\r\n            this._treeData = {};\r\n            const first = this.dataItems[0];\r\n            if (first) {\r\n                this._makeHierarchyData(this._treeData, first);\r\n                this._index = 0;\r\n                this._rootNode = d3hierarchy.hierarchy(this._treeData);\r\n                if (this._rootNode) {\r\n                    this._rootNode.sum((d) => {\r\n                        return d.value;\r\n                    });\r\n                    const sort = this.get(\"sort\");\r\n                    if (sort == \"descending\") {\r\n                        this._rootNode.sort((a, b) => b.value - a.value);\r\n                    }\r\n                    else if (sort == \"ascending\") {\r\n                        this._rootNode.sort((a, b) => a.value - b.value);\r\n                    }\r\n                    this.setPrivateRaw(\"valueLow\", Infinity);\r\n                    this.setPrivateRaw(\"valueHigh\", -Infinity);\r\n                    this.setPrivateRaw(\"maxDepth\", 0);\r\n                    this._updateValues(this._rootNode);\r\n                }\r\n            }\r\n        }\r\n        if (this._valuesDirty || this._sizeDirty) {\r\n            this._updateVisuals();\r\n        }\r\n        if (this._sizeDirty) {\r\n            const dataItem = this.get(\"selectedDataItem\");\r\n            if (dataItem) {\r\n                this._zoom(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"selectedDataItem\")) {\r\n            this._selectDataItem(this.get(\"selectedDataItem\"));\r\n        }\r\n    }\r\n    _updateVisuals() {\r\n        if (this._rootNode) {\r\n            this._updateNodes(this._rootNode);\r\n        }\r\n    }\r\n    _updateNodes(hierarchyNode) {\r\n        const dataItem = hierarchyNode.data.dataItem;\r\n        if (dataItem) {\r\n            this._updateNode(dataItem);\r\n            if (this.bullets.length > 0 && !dataItem.bullets) {\r\n                this._makeBullets(dataItem);\r\n            }\r\n            const hierarchyChildren = hierarchyNode.children;\r\n            if (hierarchyChildren) {\r\n                $array.each(hierarchyChildren, (hierarchyChild) => {\r\n                    this._updateNodes(hierarchyChild);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _updateNode(_dataItem) {\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return this._getDataItemById(this.dataItems, id);\r\n    }\r\n    _getDataItemById(dataItems, id) {\r\n        let di;\r\n        $array.each(dataItems, (dataItem) => {\r\n            if (dataItem.get(\"id\") == id) {\r\n                di = dataItem;\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                let childDataItem = this._getDataItemById(children, id);\r\n                if (childDataItem) {\r\n                    di = childDataItem;\r\n                }\r\n            }\r\n        });\r\n        return di;\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                this._handleBullets(children);\r\n            }\r\n        });\r\n        this._updateVisuals();\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const childData = dataItem.get(\"childData\");\r\n        const colors = this.get(\"colors\");\r\n        const topDepth = this.get(\"topDepth\", 0);\r\n        if (!dataItem.get(\"parent\")) {\r\n            dataItem.setRaw(\"depth\", 0);\r\n            if (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n        let depth = dataItem.get(\"depth\");\r\n        const initialDepth = this.get(\"initialDepth\", 1);\r\n        this.makeNode(dataItem);\r\n        this._processDataItem(dataItem);\r\n        if (childData) {\r\n            const children = [];\r\n            dataItem.setRaw(\"children\", children);\r\n            $array.each(childData, (child) => {\r\n                const childDataItem = new DataItem(this, child, this._makeDataItem(child));\r\n                children.push(childDataItem);\r\n                childDataItem.setRaw(\"parent\", dataItem);\r\n                childDataItem.setRaw(\"depth\", depth + 1);\r\n                if (this.dataItems.length == 1 && depth == 0) {\r\n                    if (colors && childDataItem.get(\"fill\") == null) {\r\n                        childDataItem.setRaw(\"fill\", colors.next());\r\n                    }\r\n                }\r\n                else {\r\n                    if (childDataItem.get(\"fill\") == null) {\r\n                        childDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\r\n                    }\r\n                }\r\n                this.processDataItem(childDataItem);\r\n            });\r\n        }\r\n        const children = dataItem.get(\"children\");\r\n        if (!children || children.length == 0) {\r\n            const node = dataItem.get(\"node\");\r\n            node.setAll({ toggleKey: undefined });\r\n        }\r\n        if (dataItem.get(\"disabled\") == null) {\r\n            if (depth >= topDepth + initialDepth) {\r\n                this.disableDataItem(dataItem, 0);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Adds children data to the target data item.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/hierarchy-api/#Dynamically_adding_child_nodes} for more info\r\n     * @since 5.4.5\r\n     */\r\n    addChildData(dataItem, data) {\r\n        const dataContext = dataItem.dataContext;\r\n        const childDataField = this.get(\"childDataField\");\r\n        let childData = dataContext[childDataField];\r\n        if (!childData) {\r\n            childData = data;\r\n            dataContext[childDataField] = childData;\r\n        }\r\n        else {\r\n            childData.push(...data);\r\n        }\r\n        let children = dataItem.get(\"children\");\r\n        if (!children) {\r\n            children = [];\r\n            dataItem.set(\"children\", children);\r\n        }\r\n        let depth = dataItem.get(\"depth\");\r\n        $array.each(childData, (child) => {\r\n            const childDataItem = new DataItem(this, child, this._makeDataItem(child));\r\n            children.push(childDataItem);\r\n            childDataItem.setRaw(\"parent\", dataItem);\r\n            childDataItem.setRaw(\"depth\", depth + 1);\r\n            if (childDataItem.get(\"fill\") == null) {\r\n                childDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\r\n            }\r\n            this.processDataItem(childDataItem);\r\n        });\r\n    }\r\n    _processDataItem(_dataItem) {\r\n    }\r\n    _updateValues(d3HierarchyNode) {\r\n        const dataItem = d3HierarchyNode.data.dataItem;\r\n        if (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\r\n            this.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\r\n        }\r\n        if (dataItem) {\r\n            dataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\r\n            d3HierarchyNode.index = this._index;\r\n            this._index++;\r\n            dataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\r\n            let dataValue = d3HierarchyNode.data.value;\r\n            let value = d3HierarchyNode.value;\r\n            if (dataValue != null) {\r\n                value = dataValue;\r\n                d3HierarchyNode[\"value\"] = value;\r\n            }\r\n            if ($type.isNumber(value)) {\r\n                dataItem.setRaw(\"sum\", value);\r\n                dataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\r\n                let valuePercent = 100;\r\n                const parent = dataItem.get(\"parent\");\r\n                if (parent) {\r\n                    valuePercent = value / parent.get(\"sum\") * 100;\r\n                }\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n                dataItem.setRaw(\"valuePercent\", valuePercent);\r\n                if (this.getPrivate(\"valueLow\") > value) {\r\n                    this.setPrivateRaw(\"valueLow\", value);\r\n                }\r\n                if (this.getPrivate(\"valueHigh\") < value) {\r\n                    this.setPrivateRaw(\"valueHigh\", value);\r\n                }\r\n            }\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const hierarchyChildren = d3HierarchyNode.children;\r\n        if (hierarchyChildren) {\r\n            $array.each(hierarchyChildren, (d3HierarchyChild) => {\r\n                this._updateValues(d3HierarchyChild);\r\n            });\r\n        }\r\n    }\r\n    _makeHierarchyData(data, dataItem) {\r\n        data.dataItem = dataItem;\r\n        const children = dataItem.get(\"children\");\r\n        if (children) {\r\n            const childrenDataArray = [];\r\n            data.children = childrenDataArray;\r\n            $array.each(children, (childDataItem) => {\r\n                const childData = {};\r\n                childrenDataArray.push(childData);\r\n                this._makeHierarchyData(childData, childDataItem);\r\n            });\r\n            const value = dataItem.get(\"valueWorking\");\r\n            if ($type.isNumber(value)) {\r\n                data.value = value;\r\n            }\r\n        }\r\n        else {\r\n            const value = dataItem.get(\"valueWorking\");\r\n            if ($type.isNumber(value)) {\r\n                data.value = value;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const node = dataItem.get(\"node\");\r\n        if (node) {\r\n            this.nodes.removeValue(node);\r\n            node.dispose();\r\n        }\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const children = dataItem.get(\"children\");\r\n        if (children) {\r\n            $array.each(children, (child) => {\r\n                this.disposeDataItem(child);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Hides hierarchy's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                const stateAnimationDuration = \"stateAnimationDuration\";\r\n                duration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\r\n            }\r\n            const stateAnimationEasing = \"stateAnimationEasing\";\r\n            const easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\r\n            const children = dataItem.get(\"children\");\r\n            if ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\r\n                promises.push(dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing }).waitForStop());\r\n            }\r\n            const node = dataItem.get(\"node\");\r\n            node.hide();\r\n            node.hideTooltip();\r\n            if (children) {\r\n                $array.each(children, (childDataItem) => {\r\n                    promises.push(this.hideDataItem(childDataItem));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows hierarchy's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            const children = dataItem.get(\"children\");\r\n            if ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\r\n                promises.push(dataItem.animate({ key: \"valueWorking\", to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\r\n            }\r\n            const node = dataItem.get(\"node\");\r\n            node.show();\r\n            if (children) {\r\n                $array.each(children, (childDataItem) => {\r\n                    promises.push(this.showDataItem(childDataItem));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Enables a disabled data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  duration  Animation duration in milliseconds\r\n     */\r\n    enableDataItem(dataItem, maxDepth, depth, duration) {\r\n        if (depth == null) {\r\n            depth = 0;\r\n        }\r\n        if (maxDepth == null) {\r\n            maxDepth = 1;\r\n        }\r\n        dataItem.set(\"disabled\", false);\r\n        dataItem.get(\"node\").set(\"disabled\", false);\r\n        if (!dataItem.isHidden()) {\r\n            dataItem.get(\"node\").show(duration);\r\n        }\r\n        const topDepth = this.get(\"topDepth\", 0);\r\n        if (dataItem.get(\"depth\") < topDepth) {\r\n            dataItem.get(\"node\").hide(0);\r\n        }\r\n        if (depth == 0) {\r\n            const upDepth = this.get(\"upDepth\", Infinity);\r\n            let parent = dataItem;\r\n            let count = 0;\r\n            while (parent !== undefined) {\r\n                if (count > upDepth) {\r\n                    parent.get(\"node\").hide();\r\n                }\r\n                parent = parent.get(\"parent\");\r\n                count++;\r\n            }\r\n        }\r\n        let children = dataItem.get(\"children\");\r\n        if (children) {\r\n            if (depth < maxDepth - 1) {\r\n                $array.each(children, (child) => {\r\n                    const disabledField = this.get(\"disabledField\");\r\n                    if (disabledField) {\r\n                        const dataContext = child.dataContext;\r\n                        if (dataContext[disabledField] != true) {\r\n                            this.enableDataItem(child, maxDepth, depth + 1, duration);\r\n                        }\r\n                        else {\r\n                            this.disableDataItem(child);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.enableDataItem(child, maxDepth, depth + 1, duration);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $array.each(children, (child) => {\r\n                    if (!child.isHidden()) {\r\n                        child.get(\"node\").show(duration);\r\n                        child.get(\"node\").states.applyAnimate(\"disabled\");\r\n                        child.set(\"disabled\", true);\r\n                        this.disableDataItem(child);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Disables a data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  duration  Animation duration in milliseconds\r\n     */\r\n    disableDataItem(dataItem, duration) {\r\n        dataItem.set(\"disabled\", true);\r\n        let children = dataItem.get(\"children\");\r\n        if (children) {\r\n            $array.each(children, (child) => {\r\n                this.disableDataItem(child, duration);\r\n                child.get(\"node\").hide(duration);\r\n            });\r\n        }\r\n    }\r\n    _selectDataItem(dataItem, downDepth, skipDisptach) {\r\n        if (dataItem) {\r\n            if (!skipDisptach) {\r\n                const type = \"dataitemselected\";\r\n                this.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\r\n            }\r\n            let maxDepth = this.getPrivate(\"maxDepth\", 1);\r\n            const topDepth = this.get(\"topDepth\", 0);\r\n            if (downDepth == null) {\r\n                downDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\r\n            }\r\n            if (!this.inited) {\r\n                downDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\r\n            }\r\n            this._currentDownDepth = downDepth;\r\n            const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\r\n            let currentDepth = hierarchyNode.depth;\r\n            if (currentDepth + downDepth > maxDepth) {\r\n                downDepth = maxDepth - currentDepth;\r\n            }\r\n            if (currentDepth < topDepth) {\r\n                downDepth += topDepth - currentDepth;\r\n                currentDepth = topDepth;\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children && children.length > 0) {\r\n                if (downDepth > 0) {\r\n                    this.enableDataItem(dataItem, downDepth);\r\n                }\r\n                else {\r\n                    dataItem.get(\"node\").show();\r\n                    $array.each(children, (child) => {\r\n                        child.get(\"node\").hide();\r\n                    });\r\n                }\r\n                if (hierarchyNode.depth < topDepth) {\r\n                    dataItem.get(\"node\").hide(0);\r\n                }\r\n                if (this.get(\"singleBranchOnly\")) {\r\n                    this._handleSingle(dataItem);\r\n                }\r\n            }\r\n            else {\r\n                this.enableDataItem(this.dataItems[0], downDepth, 0);\r\n            }\r\n            this._zoom(dataItem);\r\n        }\r\n    }\r\n    _zoom(_dataItem) {\r\n    }\r\n    _handleSingle(dataItem) {\r\n        const parent = dataItem.get(\"parent\");\r\n        if (parent) {\r\n            const children = parent.get(\"children\");\r\n            if (children) {\r\n                $array.each(children, (child) => {\r\n                    if (child != dataItem) {\r\n                        this.disableDataItem(child);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Selects specific data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     */\r\n    selectDataItem(dataItem) {\r\n        const parent = dataItem.get(\"parent\");\r\n        const maxDepth = this.getPrivate(\"maxDepth\", 1);\r\n        if (this.get(\"selectedDataItem\") == dataItem) {\r\n            if (parent) {\r\n                this.set(\"selectedDataItem\", parent);\r\n            }\r\n            else {\r\n                let depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\r\n                if (this._currentDownDepth == depth) {\r\n                    depth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\r\n                }\r\n                this._selectDataItem(dataItem, depth);\r\n            }\r\n        }\r\n        else {\r\n            this.set(\"selectedDataItem\", dataItem);\r\n        }\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = super._makeBullet(dataItem, bulletFunction, index);\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            const node = dataItem.get(\"node\");\r\n            if (sprite) {\r\n                node.children.push(sprite);\r\n                node.on(\"width\", () => {\r\n                    this._positionBullet(bullet);\r\n                });\r\n                node.on(\"height\", () => {\r\n                    this._positionBullet(bullet);\r\n                });\r\n            }\r\n        }\r\n        return bullet;\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const locationX = bullet.get(\"locationX\", 0.5);\r\n            const locationY = bullet.get(\"locationY\", 0.5);\r\n            const node = dataItem.get(\"node\");\r\n            sprite.set(\"x\", node.width() * locationX);\r\n            sprite.set(\"y\", node.height() * locationY);\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const node = dataItem.get(\"node\");\r\n        if (node && !node.isHidden()) {\r\n            node.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const node = dataItem.get(\"node\");\r\n        if (node) {\r\n            node.unhover();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Hierarchy, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Hierarchy\"\r\n});\r\nObject.defineProperty(Hierarchy, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Hierarchy.className])\r\n});\r\n//# sourceMappingURL=Hierarchy.js.map","import { HierarchyNode } from \"./HierarchyNode\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A node class for [[LinkedHierarchy]].\r\n */\r\nexport class LinkedHierarchyNode extends HierarchyNode {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.states.create(\"disabled\", {});\r\n        this.states.create(\"hover\", {});\r\n        this.states.create(\"hoverDisabled\", {});\r\n    }\r\n    _updateLinks(duration) {\r\n        const dataItem = this.dataItem;\r\n        if (dataItem) {\r\n            let links = dataItem.get(\"links\");\r\n            $array.each(links, (link) => {\r\n                let source = link.get(\"source\");\r\n                let target = link.get(\"target\");\r\n                if (source && target) {\r\n                    if (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\r\n                        link.hide(duration);\r\n                    }\r\n                    else {\r\n                        link.show(duration);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"disabled\")) {\r\n            this._updateLinks();\r\n        }\r\n    }\r\n    _onHide(duration) {\r\n        super._onHide(duration);\r\n        this._updateLinks(duration);\r\n    }\r\n    _onShow(duration) {\r\n        super._onShow(duration);\r\n        this._updateLinks(duration);\r\n    }\r\n}\r\nObject.defineProperty(LinkedHierarchyNode, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinkedHierarchyNode\"\r\n});\r\nObject.defineProperty(LinkedHierarchyNode, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: HierarchyNode.classNames.concat([LinkedHierarchyNode.className])\r\n});\r\n//# sourceMappingURL=LinkedHierarchyNode.js.map","import { Graphics } from \"../../core/render/Graphics\";\r\n/**\r\n * Draws a link between nodes in a hierarchy series.\r\n */\r\nexport class HierarchyLink extends Graphics {\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let source = this.get(\"source\");\r\n            let target = this.get(\"target\");\r\n            if (source && target) {\r\n                const sourceNode = source.get(\"node\");\r\n                const targetNode = target.get(\"node\");\r\n                this._display.moveTo(sourceNode.x(), sourceNode.y());\r\n                this._display.lineTo(targetNode.x(), targetNode.y());\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"source\")) {\r\n            const source = this.get(\"source\");\r\n            if (source) {\r\n                const sourceNode = source.get(\"node\");\r\n                sourceNode.events.on(\"positionchanged\", () => {\r\n                    this._markDirtyKey(\"stroke\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"target\")) {\r\n            const target = this.get(\"target\");\r\n            if (target) {\r\n                const targetNode = target.get(\"node\");\r\n                targetNode.events.on(\"positionchanged\", () => {\r\n                    this._markDirtyKey(\"stroke\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(HierarchyLink, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HierarchyLink\"\r\n});\r\nObject.defineProperty(HierarchyLink, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([HierarchyLink.className])\r\n});\r\n//# sourceMappingURL=HierarchyLink.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_trustBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, this.get(\"radius\", 10));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { Hierarchy } from \"./Hierarchy\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\r\nimport { HierarchyLink } from \"./HierarchyLink\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Circle } from \"../../core/render/Circle\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n;\r\n/**\r\n * A base class for linked hierarchy series.\r\n */\r\nexport class LinkedHierarchy extends Hierarchy {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of nodes in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<LinkedHierarchyNode>\r\n         */\r\n        Object.defineProperty(this, \"nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => LinkedHierarchyNode._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\r\n                x: this.width() / 2,\r\n                y: this.height() / 2\r\n            }, [this.nodes.template]))\r\n        });\r\n        /**\r\n         * A list of node circle elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Circle>\r\n         */\r\n        Object.defineProperty(this, \"circles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Circle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\r\n            }, [this.circles.template]))\r\n        });\r\n        /**\r\n         * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Circle>\r\n         */\r\n        Object.defineProperty(this, \"outerCircles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Circle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\r\n            }, [this.outerCircles.template]))\r\n        });\r\n        /**\r\n         * A list of link elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<HierarchyLink>\r\n         */\r\n        Object.defineProperty(this, \"links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => HierarchyLink._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\r\n            }, [this.links.template]))\r\n        });\r\n        /**\r\n         * A [[Container]] that link elements are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"linksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.moveValue(Container.new(this._root, {}), 0)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"linkWith\", \"x\", \"y\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeNode(dataItem) {\r\n        const node = super.makeNode(dataItem);\r\n        const circle = node.children.moveValue(this.circles.make(), 0);\r\n        this.circles.push(circle);\r\n        node.setPrivate(\"tooltipTarget\", circle);\r\n        dataItem.setRaw(\"circle\", circle);\r\n        const outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\r\n        this.outerCircles.push(outerCircle);\r\n        dataItem.setRaw(\"outerCircle\", outerCircle);\r\n        const label = dataItem.get(\"label\");\r\n        circle.on(\"radius\", () => {\r\n            const d = circle.get(\"radius\", this.width()) * 2;\r\n            label.setAll({ maxWidth: d, maxHeight: d });\r\n            outerCircle.set(\"radius\", d / 2);\r\n            this._handleRadiusChange();\r\n        });\r\n        const d = circle.get(\"radius\", this.width()) * 2;\r\n        label.setAll({ maxWidth: d, maxHeight: d });\r\n        circle._setDataItem(dataItem);\r\n        outerCircle._setDataItem(dataItem);\r\n        return node;\r\n    }\r\n    _handleRadiusChange() {\r\n    }\r\n    processDataItem(dataItem) {\r\n        dataItem.setRaw(\"childLinks\", []);\r\n        dataItem.setRaw(\"links\", []);\r\n        super.processDataItem(dataItem);\r\n    }\r\n    _processDataItem(dataItem) {\r\n        super._processDataItem(dataItem);\r\n        const parentDataItem = dataItem.get(\"parent\");\r\n        if (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\r\n            const link = this.linkDataItems(parentDataItem, dataItem);\r\n            dataItem.setRaw(\"parentLink\", link);\r\n        }\r\n        const node = dataItem.get(\"node\");\r\n        this.updateLinkWith(this.dataItems);\r\n        node._updateLinks(0);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLinkWith(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const linkWith = dataItem.get(\"linkWith\");\r\n            if (linkWith) {\r\n                $array.each(linkWith, (id) => {\r\n                    const linkWithDataItem = this._getDataItemById(this.dataItems, id);\r\n                    if (linkWithDataItem) {\r\n                        this.linkDataItems(dataItem, linkWithDataItem);\r\n                    }\r\n                });\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                this.updateLinkWith(children);\r\n            }\r\n        });\r\n    }\r\n    _getPoint(hierarchyNode) {\r\n        return { x: hierarchyNode.x, y: hierarchyNode.y };\r\n    }\r\n    _animatePositions(dataItem) {\r\n        const node = dataItem.get(\"node\");\r\n        const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\r\n        const point = this._getPoint(hierarchyNode);\r\n        const duration = this.get(\"animationDuration\", 0);\r\n        const easing = this.get(\"animationEasing\");\r\n        node.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\r\n        node.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\r\n    }\r\n    _updateNode(dataItem) {\r\n        super._updateNode(dataItem);\r\n        this._animatePositions(dataItem);\r\n        const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\r\n        const hierarchyChildren = hierarchyNode.children;\r\n        if (hierarchyChildren) {\r\n            $array.each(hierarchyChildren, (hierarchyChild) => {\r\n                this._updateNodes(hierarchyChild);\r\n            });\r\n        }\r\n        const fill = dataItem.get(\"fill\");\r\n        const circle = dataItem.get(\"circle\");\r\n        const children = dataItem.get(\"children\");\r\n        if (circle) {\r\n            circle._setDefault(\"fill\", fill);\r\n            circle._setDefault(\"stroke\", fill);\r\n        }\r\n        const outerCircle = dataItem.get(\"outerCircle\");\r\n        if (outerCircle) {\r\n            outerCircle._setDefault(\"fill\", fill);\r\n            outerCircle._setDefault(\"stroke\", fill);\r\n            if (!children || children.length == 0) {\r\n                outerCircle.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Link two data items with a link element.\r\n     *\r\n     * @param   source    Source node data item\r\n     * @param   target    Target node data item\r\n     * @param   strength  Link strength\r\n     * @return            Link element\r\n     */\r\n    linkDataItems(source, target, strength) {\r\n        let link;\r\n        const sourceLinks = source.get(\"links\");\r\n        if (sourceLinks) {\r\n            $array.each(sourceLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == target) {\r\n                    link = lnk;\r\n                }\r\n            });\r\n        }\r\n        const targetLinks = target.get(\"links\");\r\n        if (targetLinks) {\r\n            $array.each(targetLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == source) {\r\n                    link = lnk;\r\n                }\r\n            });\r\n        }\r\n        if (!link) {\r\n            link = this.links.make();\r\n            this.links.push(link);\r\n            this.linksContainer.children.push(link);\r\n            link.set(\"source\", source);\r\n            link.set(\"target\", target);\r\n            link._setDataItem(source);\r\n            link.set(\"stroke\", source.get(\"fill\"));\r\n            if (strength != null) {\r\n                link.set(\"strength\", strength);\r\n            }\r\n            source.get(\"childLinks\").push(link);\r\n            $array.move(source.get(\"links\"), link);\r\n            $array.move(target.get(\"links\"), link);\r\n            this._processLink(link, source, target);\r\n        }\r\n        return link;\r\n    }\r\n    /**\r\n     * Unlink two linked data items.\r\n     *\r\n     * @param   source  Source node data item\r\n     * @param   target  Target node data item\r\n     */\r\n    unlinkDataItems(source, target) {\r\n        let link;\r\n        const sourceLinks = source.get(\"links\");\r\n        if (sourceLinks) {\r\n            $array.each(sourceLinks, (lnk) => {\r\n                if (lnk && lnk.get(\"target\") == target) {\r\n                    link = lnk;\r\n                    $array.remove(sourceLinks, link);\r\n                }\r\n            });\r\n        }\r\n        const targetLinks = target.get(\"links\");\r\n        if (targetLinks) {\r\n            $array.each(targetLinks, (lnk) => {\r\n                if (lnk && lnk.get(\"target\") == source) {\r\n                    link = lnk;\r\n                    $array.remove(targetLinks, link);\r\n                }\r\n            });\r\n        }\r\n        if (link) {\r\n            this._disposeLink(link);\r\n        }\r\n        this._handleUnlink();\r\n    }\r\n    _handleUnlink() {\r\n    }\r\n    _disposeLink(link) {\r\n        this.links.removeValue(link);\r\n        link.dispose();\r\n    }\r\n    /**\r\n     * Returns `true` if two nodes are linked with each other.\r\n     */\r\n    areLinked(source, target) {\r\n        const sourceLinks = source.get(\"links\");\r\n        let linked = false;\r\n        if (sourceLinks) {\r\n            $array.each(sourceLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == target) {\r\n                    linked = true;\r\n                }\r\n            });\r\n        }\r\n        const targetLinks = target.get(\"links\");\r\n        if (targetLinks) {\r\n            $array.each(targetLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == source) {\r\n                    linked = true;\r\n                }\r\n            });\r\n        }\r\n        return linked;\r\n    }\r\n    _processLink(_link, _source, _target) {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const links = dataItem.get(\"links\");\r\n        if (links) {\r\n            $array.each(links, (link) => {\r\n                this._disposeLink(link);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Select a data item.\r\n     * @param  dataItem  Data item\r\n     */\r\n    selectDataItem(dataItem) {\r\n        const parent = dataItem.get(\"parent\");\r\n        if (!dataItem.get(\"disabled\")) {\r\n            this.set(\"selectedDataItem\", dataItem);\r\n        }\r\n        else {\r\n            if (parent) {\r\n                this.setRaw(\"selectedDataItem\", parent);\r\n                const type = \"dataitemselected\";\r\n                this.events.dispatch(type, { type: type, target: this, dataItem: parent });\r\n                this.disableDataItem(dataItem);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LinkedHierarchy, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinkedHierarchy\"\r\n});\r\nObject.defineProperty(LinkedHierarchy, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Hierarchy.classNames.concat([LinkedHierarchy.className])\r\n});\r\n//# sourceMappingURL=LinkedHierarchy.js.map","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import { LinkedHierarchy } from \"./LinkedHierarchy\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as d3Force from \"d3-force\";\r\n;\r\n/**\r\n * Creates a force-directed tree.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\r\n * @important\r\n */\r\nexport class ForceDirected extends LinkedHierarchy {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"forcedirected\"\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"d3forceSimulation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: d3Force.forceSimulation()\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"collisionForce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: d3Force.forceCollide(20)\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"linkForce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: d3Force.forceLink()\r\n        });\r\n        Object.defineProperty(this, \"_nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_tick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_nodesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.d3forceSimulation.on(\"tick\", () => {\r\n            this._tick++;\r\n            this.updateNodePositions();\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"showOnFrame\")) {\r\n            const showOnFrame = this.get(\"showOnFrame\");\r\n            if (showOnFrame > this._tick) {\r\n                this.nodesContainer.setPrivate(\"visible\", false);\r\n                this.linksContainer.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        if (this.isDirty(\"velocityDecay\")) {\r\n            d3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\r\n        }\r\n        if (this.isDirty(\"initialFrames\")) {\r\n            d3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    restartSimulation(alpha) {\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        if (d3forceSimulation.alpha() < .25) {\r\n            d3forceSimulation.alpha(alpha);\r\n            d3forceSimulation.restart();\r\n        }\r\n    }\r\n    _handleRadiusChange() {\r\n        this._updateForces();\r\n    }\r\n    processDataItem(dataItem) {\r\n        const d3ForceNode = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\r\n        const index = this._nodes.push(d3ForceNode) - 1;\r\n        d3ForceNode.index = index;\r\n        this.d3forceSimulation.nodes(this._nodes);\r\n        dataItem.set(\"d3ForceNode\", d3ForceNode);\r\n        super.processDataItem(dataItem);\r\n        const node = dataItem.get(\"node\");\r\n        node.set(\"x\", -10000);\r\n        node.on(\"scale\", () => {\r\n            this._updateForces();\r\n        });\r\n        node.events.on(\"dragged\", () => {\r\n            d3ForceNode.fx = node.x();\r\n            d3ForceNode.fy = node.y();\r\n            this._updateForces();\r\n        });\r\n        node.events.on(\"dragstop\", () => {\r\n            if (dataItem.get(\"x\") == null) {\r\n                d3ForceNode.fx = undefined;\r\n            }\r\n            if (dataItem.get(\"y\") == null) {\r\n                d3ForceNode.fy = undefined;\r\n            }\r\n        });\r\n    }\r\n    _updateValues(d3HierarchyNode) {\r\n        super._updateValues(d3HierarchyNode);\r\n        this._nodesDirty = true;\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.force(\"collision\", this.collisionForce);\r\n        d3forceSimulation.nodes(this._nodes);\r\n        this.linkForce = d3Force.forceLink(this._links);\r\n        d3forceSimulation.force(\"link\", this.linkForce);\r\n    }\r\n    _updateVisuals() {\r\n        super._updateVisuals();\r\n        this.restartSimulation(.3);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        if (this._sizeDirty) {\r\n            let w = Math.max(50, this.innerWidth());\r\n            let h = Math.max(50, this.innerHeight());\r\n            let pt = this.get(\"paddingTop\", 0);\r\n            let pl = this.get(\"paddingLeft\", 0);\r\n            let centerStrength = this.get(\"centerStrength\", 1);\r\n            d3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\r\n            d3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\r\n        }\r\n        if (this._nodesDirty) {\r\n            this._updateForces();\r\n        }\r\n    }\r\n    _updateForces() {\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\r\n            let dataItem = d3node.dataItem;\r\n            let node = dataItem.get(\"node\");\r\n            let circle = dataItem.get(\"circle\");\r\n            let manyBodyStrength = this.get(\"manyBodyStrength\", -15);\r\n            if (circle) {\r\n                return circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\r\n            }\r\n            return 0;\r\n        }));\r\n        this.collisionForce.radius((d3node) => {\r\n            let dataItem = d3node.dataItem;\r\n            let node = dataItem.get(\"node\");\r\n            let circle = dataItem.get(\"circle\");\r\n            let outerCircle = dataItem.get(\"outerCircle\");\r\n            if (circle && outerCircle) {\r\n                let radius = circle.get(\"radius\", 1);\r\n                if (!outerCircle.isHidden()) {\r\n                    radius = radius * outerCircle.get(\"scale\", 1.1);\r\n                }\r\n                radius *= node.get(\"scale\", 1);\r\n                return radius + this.get(\"nodePadding\", 0);\r\n            }\r\n        });\r\n        this.restartSimulation(0.3);\r\n    }\r\n    _animatePositions(_dataItem) {\r\n        // void, do not remove\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._nodesDirty = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateNodePositions() {\r\n        const linkForce = this.linkForce;\r\n        if (linkForce) {\r\n            linkForce.distance((linkDatum) => {\r\n                return this.getDistance(linkDatum);\r\n            });\r\n            linkForce.strength((linkDatum) => {\r\n                return this.getStrength(linkDatum);\r\n            });\r\n        }\r\n        if (this._tick == this.get(\"showOnFrame\")) {\r\n            this.nodesContainer.setPrivate(\"visible\", true);\r\n            this.linksContainer.setPrivate(\"visible\", true);\r\n        }\r\n        let d3Nodes = this.d3forceSimulation.nodes();\r\n        $array.each(d3Nodes, (d3Node) => {\r\n            const dataItem = d3Node.dataItem;\r\n            const node = dataItem.get(\"node\");\r\n            node.set(\"x\", d3Node.x);\r\n            node.set(\"y\", d3Node.y);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLinkWith(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const linkWith = dataItem.get(\"linkWith\");\r\n            if (linkWith) {\r\n                $array.each(linkWith, (id) => {\r\n                    const linkWithDataItem = this._getDataItemById(this.dataItems, id);\r\n                    if (linkWithDataItem) {\r\n                        this.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\r\n                    }\r\n                });\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                this.updateLinkWith(children);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDistance(linkDatum) {\r\n        let sourceDataItem = linkDatum.sourceDataItem;\r\n        let targetDataItem = linkDatum.targetDataItem;\r\n        let distance = 0;\r\n        if (sourceDataItem && targetDataItem) {\r\n            const targetNode = targetDataItem.get(\"node\");\r\n            if (targetNode.isHidden()) {\r\n                return 0;\r\n            }\r\n            let link = linkDatum.link;\r\n            if (link) {\r\n                distance = link.get(\"distance\", 1);\r\n            }\r\n            const sourceNode = sourceDataItem.get(\"node\");\r\n            if (targetNode.isHidden()) {\r\n                distance = 1;\r\n            }\r\n            return (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\r\n        }\r\n        return distance;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    getStrength(linkDatum) {\r\n        let strength = 0;\r\n        let link = linkDatum.link;\r\n        if (link) {\r\n            strength = link.get(\"strength\", 1);\r\n        }\r\n        const targetDataItem = linkDatum.targetDataItem;\r\n        strength *= targetDataItem.get(\"node\").get(\"scale\");\r\n        return strength;\r\n    }\r\n    _updateNode(dataItem) {\r\n        super._updateNode(dataItem);\r\n        this._updateRadius(dataItem);\r\n        const x = dataItem.get(\"x\");\r\n        const y = dataItem.get(\"y\");\r\n        const d3Node = dataItem.get(\"d3ForceNode\");\r\n        if (x != null) {\r\n            d3Node.fx = $utils.relativeToValue(x, this.innerWidth());\r\n        }\r\n        else {\r\n            d3Node.fx = undefined;\r\n        }\r\n        if (y != null) {\r\n            d3Node.fy = $utils.relativeToValue(y, this.innerHeight());\r\n        }\r\n        else {\r\n            d3Node.fx = undefined;\r\n        }\r\n    }\r\n    _updateRadius(dataItem) {\r\n        let size = (this.innerWidth() + this.innerHeight()) / 2;\r\n        let minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\r\n        let maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\r\n        let valueWorking = dataItem.get(\"sum\");\r\n        let radius = maxRadius;\r\n        const min = this.getPrivate(\"valueLow\", 0);\r\n        const max = this.getPrivate(\"valueHigh\", 0);\r\n        if (max > 0) {\r\n            radius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\r\n        }\r\n        if (!$type.isNumber(radius)) {\r\n            radius = minRadius;\r\n        }\r\n        const duration = this.get(\"animationDuration\", 0);\r\n        const easing = this.get(\"animationEasing\");\r\n        dataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\r\n    }\r\n    _processLink(link, source, target) {\r\n        const d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\r\n        this._links.push(d3Link);\r\n        link.setPrivate(\"d3Link\", d3Link);\r\n        this.linkForce = d3Force.forceLink(this._links);\r\n        this.d3forceSimulation.force(\"link\", this.linkForce);\r\n        this.restartSimulation(0.5);\r\n    }\r\n    _disposeLink(link) {\r\n        super._disposeLink(link);\r\n        $array.remove(this._links, link.getPrivate(\"d3Link\"));\r\n    }\r\n    _handleUnlink() {\r\n        this.restartSimulation(0.5);\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        this._nodes = [];\r\n        this._links = [];\r\n    }\r\n}\r\nObject.defineProperty(ForceDirected, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ForceDirected\"\r\n});\r\nObject.defineProperty(ForceDirected, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: LinkedHierarchy.classNames.concat([ForceDirected.className])\r\n});\r\n//# sourceMappingURL=ForceDirected.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class PercentDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/percent\r\n         * ========================================================================\r\n         */\r\n        r(\"PercentSeries\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/pie\r\n         * ========================================================================\r\n         */\r\n        r(\"PieChart\").setAll({\r\n            radius: percent(80),\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").setAll({\r\n            alignLabels: true,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n        r(\"Slice\", [\"pie\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            x: 0,\r\n            y: 0,\r\n            toggleKey: \"active\",\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            role: \"figure\",\r\n            lineJoin: \"round\"\r\n        });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20, scale: 1 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1.04 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n        r(\"RadialLabel\", [\"pie\"]).setAll({\r\n            textType: \"aligned\",\r\n            radius: 10,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            populateText: true\r\n        });\r\n        r(\"Tick\", [\"pie\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/funnel\r\n         * ========================================================================\r\n         */\r\n        r(\"SlicedChart\").setAll({\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Funnel\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"FunnelSeries\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            orientation: \"vertical\",\r\n            alignLabels: true,\r\n            sequencedInterpolation: true\r\n        });\r\n        r(\"FunnelSlice\").setAll({\r\n            interactive: true,\r\n            expandDistance: 0,\r\n            //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"funnel\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        // Class: Label\r\n        r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"funnel\"]).setAll({\r\n            location: 1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            strokeOpacity: 0,\r\n            expandDistance: -0.1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n            height: 10,\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n            width: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pyramid\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"PyramidSeries\").setAll({\r\n            valueIs: \"area\"\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n            fillOpacity: 0.5\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n            height: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n            width: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n            interactive: true,\r\n            expandDistance: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"pyramid\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"pyramid\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pictorial\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: FunnelSlice\r\n        r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n            interactive: true,\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"Label\", [\"pictorial\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        r(\"Tick\", [\"pictorial\"]).setAll({\r\n            location: 0.5\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=PercentDefaultTheme.js.map","import { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nexport class PercentChart extends SerialChart {\r\n    _afterNew() {\r\n        this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        this.seriesContainer.children.push(this.bulletsContainer);\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n    }\r\n}\r\nObject.defineProperty(PercentChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentChart\"\r\n});\r\nObject.defineProperty(PercentChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([PercentChart.className])\r\n});\r\n//# sourceMappingURL=PercentChart.js.map","import { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ x: p50, y: p50 });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chartContainer = this.chartContainer;\r\n        const w = chartContainer.innerWidth();\r\n        const h = chartContainer.innerHeight();\r\n        const startAngle = this.get(\"startAngle\", 0);\r\n        const endAngle = this.get(\"endAngle\", 0);\r\n        const innerRadius = this.get(\"innerRadius\");\r\n        let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n        const wr = w / (bounds.right - bounds.left);\r\n        const hr = h / (bounds.bottom - bounds.top);\r\n        let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n        if (innerRadius instanceof Percent) {\r\n            let value = innerRadius.value;\r\n            let mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n            innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n            this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n        }\r\n        bounds = $math.mergeBounds([bounds, innerBounds]);\r\n        const prevRadius = this._maxRadius;\r\n        this._maxRadius = Math.min(wr, hr);\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        this.seriesContainer.setAll({\r\n            dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n        });\r\n        if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"startAngle\");\r\n            });\r\n        }\r\n        if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"innerRadius\");\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    radius(series) {\r\n        let radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesRadius = series.get(\"radius\");\r\n            if (seriesRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * (index + 1);\r\n            }\r\n        }\r\n        return radius;\r\n    }\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    innerRadius(series) {\r\n        const radius = this.radius();\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesInnerRadius = series.get(\"innerRadius\");\r\n            if (seriesInnerRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * index;\r\n            }\r\n        }\r\n        return innerRadius;\r\n    }\r\n}\r\nObject.defineProperty(PieChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieChart\"\r\n});\r\nObject.defineProperty(PieChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([PieChart.className])\r\n});\r\n//# sourceMappingURL=PieChart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nexport class PercentSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeSlices()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeLabels()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeTicks()\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (dataItem.get(\"value\") != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem) {\r\n        const tick = this.ticksContainer.children.push(this.ticks.make());\r\n        tick._setDataItem(dataItem);\r\n        dataItem.set(\"tick\", tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._lLabels = [];\r\n        this._rLabels = [];\r\n        this._hLabels = [];\r\n        if (this._valuesDirty) {\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"valueWorking\", 0);\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n                let percentTotal = value / absSum;\r\n                if (absSum == 0) {\r\n                    percentTotal = 0;\r\n                }\r\n                dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n        }\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this._valuesDirty) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n            });\r\n        }\r\n        if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n            });\r\n        }\r\n        this._arrange();\r\n    }\r\n    _arrange() {\r\n        this._arrangeDown(this._lLabels);\r\n        this._arrangeUp(this._lLabels);\r\n        this._arrangeDown(this._rLabels);\r\n        this._arrangeUp(this._rLabels);\r\n        this._arrangeLeft(this._hLabels);\r\n        this._arrangeRight(this._hLabels);\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            this._updateTick(dataItem);\r\n        });\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        this._arrange();\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.show(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            if (slice.get(\"active\")) {\r\n                slice.states.applyAnimate(\"active\");\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.hide(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            slice.hideTooltip();\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            this.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        if (dataItem) {\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const legendDataItem = dataItem.get(\"legendDataItem\");\r\n                if (legendDataItem) {\r\n                    const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                    $array.each(visualSettings, (setting) => {\r\n                        if (slice.get(setting) != null) {\r\n                            markerRectangle.set(setting, slice.get(setting));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _arrangeDown(labels) {\r\n        if (labels) {\r\n            let next = this._getNextDown();\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelTop = bounds.top;\r\n                if (l.y + labelTop < next) {\r\n                    l.y = next - labelTop;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.bottom;\r\n            });\r\n        }\r\n    }\r\n    _getNextUp() {\r\n        return this.labelsContainer.maxHeight();\r\n    }\r\n    _getNextDown() {\r\n        return 0;\r\n    }\r\n    _arrangeUp(labels) {\r\n        if (labels) {\r\n            let next = this._getNextUp();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelBottom = bounds.bottom;\r\n                if (l.y + labelBottom > next) {\r\n                    l.y = next - labelBottom;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.top;\r\n            });\r\n        }\r\n    }\r\n    _arrangeRight(labels) {\r\n        if (labels) {\r\n            let next = 0;\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelLeft = bounds.left;\r\n                if (l.y + labelLeft < next) {\r\n                    l.y = next - labelLeft;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.right;\r\n            });\r\n        }\r\n    }\r\n    _arrangeLeft(labels) {\r\n        if (labels) {\r\n            let next = this.labelsContainer.maxWidth();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelRight = bounds.right;\r\n                if (l.y + labelRight > next) {\r\n                    l.y = next - labelRight;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.left;\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirty();\r\n    }\r\n    _updateTick(_dataItem) {\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PercentSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentSeries\"\r\n});\r\nObject.defineProperty(PercentSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([PercentSeries.className])\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n//# sourceMappingURL=Slice.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n//# sourceMappingURL=RadialText.js.map","// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n//# sourceMappingURL=RadialLabel.js.map","import { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.ticks.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice.on(\"scale\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.on(\"shiftRadius\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        const label = this.makeLabel(dataItem);\r\n        label.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n    }\r\n    _getNextUp() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart._maxRadius;\r\n        }\r\n        return this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _getNextDown() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return -chart._maxRadius;\r\n        }\r\n        return -this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                let labelsTemplate = this.labels.template;\r\n                if (this.get(\"alignLabels\")) {\r\n                    labelsTemplate.set(\"textType\", \"aligned\");\r\n                }\r\n                else {\r\n                    let textType = labelsTemplate.get(\"textType\");\r\n                    if (textType == null || textType == \"aligned\") {\r\n                        labelsTemplate.set(\"textType\", \"adjusted\");\r\n                    }\r\n                }\r\n            }\r\n            if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                this.markDirtyBounds();\r\n                const startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                const endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                const arc = endAngle - startAngle;\r\n                let currentAngle = startAngle;\r\n                const radius = chart.radius(this);\r\n                this.setPrivateRaw(\"radius\", radius);\r\n                let innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                //if (radius > 0) {\r\n                $array.each(this._dataItems, (dataItem) => {\r\n                    this.updateLegendValue(dataItem);\r\n                    let currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\r\n                    const slice = dataItem.get(\"slice\");\r\n                    if (slice) {\r\n                        slice.set(\"radius\", radius);\r\n                        slice.set(\"innerRadius\", innerRadius);\r\n                        slice.set(\"startAngle\", currentAngle);\r\n                        slice.set(\"arc\", currentArc);\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                    }\r\n                    let middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\r\n                    const label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.setPrivate(\"radius\", radius);\r\n                        label.setPrivate(\"innerRadius\", innerRadius);\r\n                        label.set(\"labelAngle\", middleAngle);\r\n                        if (label.get(\"textType\") == \"aligned\") {\r\n                            let labelRadius = radius + label.get(\"radius\", 0);\r\n                            let y = radius * $math.sin(middleAngle);\r\n                            if (middleAngle > 90 && middleAngle <= 270) {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._lLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius *= -1;\r\n                                labelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                label.set(\"centerX\", p100);\r\n                                label.setPrivateRaw(\"left\", true);\r\n                            }\r\n                            else {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._rLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius += this.labelsContainer.get(\"paddingRight\", 0);\r\n                                label.set(\"centerX\", 0);\r\n                                label.setPrivateRaw(\"left\", false);\r\n                            }\r\n                            label.set(\"x\", labelRadius);\r\n                            label.set(\"y\", radius * $math.sin(middleAngle));\r\n                        }\r\n                    }\r\n                    currentAngle += currentArc;\r\n                    this._updateTick(dataItem);\r\n                });\r\n                //}\r\n            }\r\n        }\r\n    }\r\n    _updateTick(dataItem) {\r\n        const tick = dataItem.get(\"tick\");\r\n        const label = dataItem.get(\"label\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const location = tick.get(\"location\", 1);\r\n        if (tick && label && slice) {\r\n            const radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n            const labelAngle = label.get(\"labelAngle\", 0);\r\n            const cos = $math.cos(labelAngle);\r\n            const sin = $math.sin(labelAngle);\r\n            const labelsContainer = this.labelsContainer;\r\n            const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n            const pr = labelsContainer.get(\"paddingRight\", 0);\r\n            let x = 0;\r\n            let y = 0;\r\n            x = label.x();\r\n            y = label.y();\r\n            if (label.get(\"textType\") == \"circular\") {\r\n                const labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                const labelAngle = label.get(\"labelAngle\", 0);\r\n                x = labelRadius * $math.cos(labelAngle);\r\n                y = labelRadius * $math.sin(labelAngle);\r\n            }\r\n            let dx = -pr;\r\n            if (label.getPrivate(\"left\")) {\r\n                dx = pl;\r\n            }\r\n            tick.set(\"points\", [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }]);\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const innerRadius = slice.get(\"innerRadius\", 0);\r\n                const radius = slice.get(\"radius\", 0);\r\n                const startAngle = slice.get(\"startAngle\", 0);\r\n                const arc = slice.get(\"arc\", 0);\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                const angle = startAngle + arc * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PieSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieSeries\"\r\n});\r\nObject.defineProperty(PieSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([PieSeries.className])\r\n});\r\n//# sourceMappingURL=PieSeries.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map",";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.hide(0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"xy\", \"background\"],\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(event.point);\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                if ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\r\n                    this.handleWheel(event);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        if (originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(event.point);\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const pointerId = originalEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                let local = this.plotContainer.toLocal(event.point);\r\n                if (local.x == downPoint.x && local.y == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event.originalEvent;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(event.point);\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\r\n        const positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        const hh = this.height();\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        this._updateFinals(start, end);\r\n        if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n            let sAnimation = this._sAnimation;\r\n            let eAnimation = this._eAnimation;\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                start = -maxDeviation;\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                end = 1 + maxDeviation;\r\n            }\r\n            if (start > end) {\r\n                [start, end] = [end, start];\r\n            }\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"interpolationDuration\", 0);\r\n            }\r\n            if (!priority) {\r\n                priority = \"end\";\r\n            }\r\n            let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n            let maxZoomFactorReal = maxZoomFactor;\r\n            if (end === 1 && start !== 0) {\r\n                if (start < this.get(\"start\")) {\r\n                    priority = \"start\";\r\n                }\r\n                else {\r\n                    priority = \"end\";\r\n                }\r\n            }\r\n            if (start === 0 && end !== 1) {\r\n                if (end > this.get(\"end\")) {\r\n                    priority = \"end\";\r\n                }\r\n                else {\r\n                    priority = \"start\";\r\n                }\r\n            }\r\n            let minZoomCount = this.get(\"minZoomCount\");\r\n            let maxZoomCount = this.get(\"maxZoomCount\");\r\n            if ($type.isNumber(minZoomCount)) {\r\n                maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n            }\r\n            let minZoomFactor = 1;\r\n            if ($type.isNumber(maxZoomCount)) {\r\n                minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n            }\r\n            // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n            if (priority === \"start\") {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        end = start + 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // add to the end\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                //unless end is > 0\r\n                if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                    //end = 1;\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            // most likely we are dragging right, so we modify left\r\n            else {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        start = end - 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // remove from start\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                    //start = 0;\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                end = start + 1 / maxZoomFactor;\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                start = end - 1 / maxZoomFactor;\r\n            }\r\n            if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                const chart = this.chart;\r\n                if (chart) {\r\n                    chart._handleAxisSelection(this, true);\r\n                }\r\n            }\r\n            if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                return;\r\n            }\r\n            if (duration > 0) {\r\n                let easing = this.get(\"interpolationEasing\");\r\n                let sAnimation, eAnimation;\r\n                if (this.get(\"start\") != start) {\r\n                    sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                }\r\n                if (this.get(\"end\") != end) {\r\n                    eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                }\r\n                this._sAnimation = sAnimation;\r\n                this._eAnimation = eAnimation;\r\n                if (sAnimation) {\r\n                    return sAnimation;\r\n                }\r\n                else if (eAnimation) {\r\n                    return eAnimation;\r\n                }\r\n            }\r\n            else {\r\n                this.set(\"start\", start);\r\n                this.set(\"end\", end);\r\n                // otherwise bullets and line out of sync, as series is not redrawn\r\n                this._root.events.once(\"frameended\", () => {\r\n                    this._markDirtyKey(\"start\");\r\n                    this._root._markDirty();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this._sAnimation) {\r\n                this._sAnimation.stop();\r\n            }\r\n            if (this._eAnimation) {\r\n                this._eAnimation.stop();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            this.chart._updateCursor();\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, false);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, true);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.setPrivate(\"visible\", visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(\"visible\", visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(\"visible\", visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(\"visible\", visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags) {\r\n        const renderer = this.get(\"renderer\");\r\n        if (!dataItem.get(\"label\")) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"grid\")) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"tick\")) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = bounds.right - bounds.left;\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = bounds.right - bounds.left;\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (this.get(\"snapTooltip\")) {\r\n                    position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n                }\r\n                if (!$type.isNaN(position)) {\r\n                    this.setPrivateRaw(\"tooltipPosition\", position);\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\") || position > this.get(\"end\")) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Converts relative position of the axis to a global position taking current\r\n     * zoom into account (opposite to what `toAxisPosition` does).\r\n     *\r\n     * @since 5.4.2\r\n     * @param position Position\r\n     * @return Global position\r\n     */\r\n    toGlobalPosition(position) {\r\n        return this.get(\"renderer\").toGlobalPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nexport class CategoryAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.fields.push(\"category\");\r\n        this.setPrivateRaw(\"name\", \"category\");\r\n        this.addTag(\"category\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const len = this.dataItems.length;\r\n        let i = 0;\r\n        if (this._valuesDirty) {\r\n            this._itemMap = {};\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                dataItem.setRaw(\"index\", i);\r\n                this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                i++;\r\n            });\r\n            this.setPrivateRaw(\"maxZoomFactor\", len);\r\n        }\r\n        this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n        this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n        if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n            if (this.dataItems.length > 0) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        $array.each(this.series, (series) => {\r\n            let startCategory = this.dataItems[this.startIndex()].get(\"category\");\r\n            let endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\r\n            let baseAxis = series.get(\"baseAxis\");\r\n            let xAxis = series.get(\"xAxis\");\r\n            let yAxis = series.get(\"yAxis\");\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                series._markDirtyAxes();\r\n            }\r\n            else if (baseAxis === this) {\r\n                let key;\r\n                let openKey;\r\n                let otherAxis = yAxis;\r\n                if (xAxis === baseAxis) {\r\n                    if (series.get(\"categoryXField\")) {\r\n                        key = \"categoryX\";\r\n                    }\r\n                    if (series.get(\"openCategoryXField\")) {\r\n                        openKey = \"openCategoryX\";\r\n                    }\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    if (series.get(\"categoryYField\")) {\r\n                        key = \"categoryY\";\r\n                    }\r\n                    if (series.get(\"openCategoryYField\")) {\r\n                        openKey = \"openCategoryY\";\r\n                    }\r\n                    otherAxis = xAxis;\r\n                }\r\n                if (otherAxis.className == \"ValueAxis\") {\r\n                    if (key || openKey) {\r\n                        let startDataItem;\r\n                        let endDataItem;\r\n                        for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let startIndex = 0;\r\n                        let endIndex = series.dataItems.length;\r\n                        if (startDataItem) {\r\n                            startIndex = series.dataItems.indexOf(startDataItem);\r\n                        }\r\n                        if (endDataItem) {\r\n                            endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                        }\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                        let hasValue = false;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            const dataItem = series.dataItems[i];\r\n                            $array.each(series.__valueXShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            $array.each(series.__valueYShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            if (hasValue) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", !hasValue);\r\n                    }\r\n                }\r\n                series._markDirtyAxes(); // must be outside\r\n            }\r\n        });\r\n    }\r\n    _prepareAxisItems() {\r\n        const renderer = this.get(\"renderer\");\r\n        const len = this.dataItems.length;\r\n        let startIndex = this.startIndex();\r\n        if (startIndex > 0) {\r\n            startIndex--;\r\n        }\r\n        let endIndex = this.endIndex();\r\n        if (endIndex < len) {\r\n            endIndex++;\r\n        }\r\n        let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\r\n        let frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n        startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._frequency = frequency;\r\n        for (let j = 0; j < len; j++) {\r\n            this.dataItems[j].hide();\r\n        }\r\n        let f = this.dataItems[startIndex].get(\"index\", 0);\r\n        for (let i = startIndex; i < endIndex; i = i + frequency) {\r\n            let dataItem = this.dataItems[i];\r\n            this._createAssets(dataItem, []);\r\n            if (dataItem.isHidden()) {\r\n                dataItem.show();\r\n            }\r\n            this._prepareDataItem(dataItem, f, frequency);\r\n            f++;\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _prepareDataItem(dataItem, fillIndex, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n        let endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n        let index = dataItem.get(\"index\");\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.get(\"category\"));\r\n        }\r\n        let position = this.indexToPosition(index, categoryLocation);\r\n        let endCategory = dataItem.get(\"endCategory\");\r\n        let endIndex;\r\n        if (endCategory) {\r\n            endIndex = this.categoryToIndex(endCategory);\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = index;\r\n            }\r\n        }\r\n        else {\r\n            endIndex = index;\r\n        }\r\n        let endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n        let fillEndIndex;\r\n        let fillEndPosition;\r\n        if (dataItem.get(\"isRange\")) {\r\n            fillEndIndex = endIndex;\r\n        }\r\n        else {\r\n            fillEndIndex = index + this._frequency - 1;\r\n        }\r\n        fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        const fillRule = this.get(\"fillRule\");\r\n        if (fillRule) {\r\n            fillRule(dataItem, fillIndex);\r\n        }\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    baseValue() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    basePosition() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    getX(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    getY(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    indexToPosition(index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        let len = this.dataItems.length;\r\n        let startLocation = this.get(\"startLocation\", 0);\r\n        let endLocation = this.get(\"endLocation\", 1);\r\n        len -= startLocation;\r\n        len -= (1 - endLocation);\r\n        let position = (index + location - startLocation) / len;\r\n        let dataItem = this.dataItems[index];\r\n        if (dataItem) {\r\n            position += dataItem.get(\"deltaPosition\", 0);\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    categoryToIndex(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return dataItem.get(\"index\");\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dataItemToPosition(dataItem) {\r\n        return this.indexToPosition(dataItem.get(\"index\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        position += (0.5 - location) / this.dataItems.length;\r\n        return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n    }\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    axisPositionToIndex(position) {\r\n        let len = this.dataItems.length;\r\n        return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        //@todo number formatter + tag\r\n        const dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n        if (dataItem) {\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                return populateString(label, this.get(\"tooltipText\", \"\"));\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n        tooltip.label.text.markDirtyText();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        if (this.dataItems.length > 0) {\r\n            let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            let index = this.axisPositionToIndex(position);\r\n            // try simple first\r\n            let seriesDataItem = series.dataItems[index];\r\n            let axisDataItem = this.dataItems[index];\r\n            let category = axisDataItem.get(\"category\");\r\n            if (seriesDataItem && axisDataItem) {\r\n                if (seriesDataItem.get(fieldName) === category) {\r\n                    return seriesDataItem;\r\n                }\r\n            }\r\n            // if not found, try looking\r\n            for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                let dataItem = series.dataItems[i];\r\n                if (dataItem.get(fieldName) === category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToIndexes(start, end, duration) {\r\n        let len = this.dataItems.length;\r\n        this.zoom(start / len, end / len, duration);\r\n    }\r\n    zoomToCategories(startCategory, endCategory, duration) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n    }\r\n}\r\nObject.defineProperty(CategoryAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CategoryAxis\"\r\n});\r\nObject.defineProperty(CategoryAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([CategoryAxis.className])\r\n});\r\n//# sourceMappingURL=CategoryAxis.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template]))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template]))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template]))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event);\r\n            }));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(event.point);\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(event.point);\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\r\n            this.axis.zoom(downStart - extra, downEnd + extra, 0);\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start);\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (chart.inPlot(point)) {\r\n                tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            }\r\n            else {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            this._getMinMax();\r\n            this.ghostLabel.set(\"text\", \"\");\r\n            this._dirtyExtremes = false;\r\n        }\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            this._getSelectionMinMax();\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let i = 0;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        minLog = step;\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\r\n                }\r\n            }\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                if (!logarithmic) {\r\n                    value += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        value = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\r\n                    }\r\n                    else {\r\n                        value += step;\r\n                    }\r\n                }\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        const strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            selectionMin -= (selectionMax - selectionMin) * extraMin;\r\n            selectionMax += (selectionMax - selectionMin) * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            min -= (max - min) * extraMin;\r\n            max += (max - min) * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n            //label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\r\n        }\r\n        // //@todo number formatter + tag\r\n        // return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nexport class DateAxis extends ValueAxis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesDataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_baseDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_intervalMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_intervalMin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        super._afterNew();\r\n        this._setBaseInterval(this.get(\"baseInterval\"));\r\n        this.on(\"baseInterval\", () => {\r\n            this._setBaseInterval(this.get(\"baseInterval\"));\r\n        });\r\n    }\r\n    _setBaseInterval(interval) {\r\n        this.setPrivateRaw(\"baseInterval\", interval);\r\n        this._baseDuration = $time.getIntervalDuration(interval);\r\n    }\r\n    _fixZoomFactor() {\r\n        const maxZoomFactor = this.get(\"maxZoomFactor\");\r\n        if (maxZoomFactor != null && maxZoomFactor != Infinity) {\r\n            this.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\r\n        }\r\n        else {\r\n            this.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\r\n        }\r\n    }\r\n    _groupData() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (($type.isNumber(min) && $type.isNumber(max))) {\r\n            this._fixZoomFactor();\r\n            const groupInterval = this.getPrivate(\"groupInterval\");\r\n            if (groupInterval) {\r\n                this._setBaseInterval(groupInterval);\r\n            }\r\n            else {\r\n                this._setBaseInterval(this.get(\"baseInterval\"));\r\n            }\r\n            if (this.isDirty(\"groupInterval\")) {\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (groupInterval) {\r\n                    this.setRaw(\"groupIntervals\", [groupInterval]);\r\n                    this._handleRangeChange();\r\n                }\r\n            }\r\n            if (this.isDirty(\"groupData\")) {\r\n                if (!this._dataGrouped) {\r\n                    if (this.get(\"groupData\")) {\r\n                        $array.each(this.series, (series) => {\r\n                            this._groupSeriesData(series);\r\n                        });\r\n                        this._handleRangeChange();\r\n                    }\r\n                    else {\r\n                        let baseInterval = this.get(\"baseInterval\");\r\n                        let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n                        $array.each(this.series, (series) => {\r\n                            series.setDataSet(mainDataSetId);\r\n                            series.resetGrouping();\r\n                        });\r\n                        this._setBaseInterval(baseInterval);\r\n                        this.setPrivateRaw(\"groupInterval\", undefined);\r\n                        this.markDirtyExtremes();\r\n                    }\r\n                    this._dataGrouped = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _groupSeriesData(series) {\r\n        if (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\r\n            this._dataGrouped = true; // helps to avoid double grouping\r\n            this._seriesDataGrouped = true;\r\n            // make array of intervals which will be used;\r\n            let intervals = [];\r\n            let baseDuration = this.baseMainDuration();\r\n            let groupIntervals = this.get(\"groupIntervals\");\r\n            if (groupIntervals) { }\r\n            $array.each(groupIntervals, (interval) => {\r\n                let intervalDuration = $time.getIntervalDuration(interval);\r\n                if (intervalDuration > baseDuration) {\r\n                    intervals.push(interval);\r\n                }\r\n            });\r\n            series._dataSets = {};\r\n            const key = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\r\n            let fields;\r\n            const baseAxis = series.get(\"baseAxis\");\r\n            if (series.get(\"xAxis\") === baseAxis) {\r\n                fields = series._valueYFields;\r\n            }\r\n            else if (series.get(\"yAxis\") === baseAxis) {\r\n                fields = series._valueXFields;\r\n            }\r\n            let dataItems = series._mainDataItems;\r\n            let baseInterval = this.get(\"baseInterval\");\r\n            let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n            series._dataSets[mainDataSetId] = dataItems;\r\n            const groupCallback = series.get(\"groupDataCallback\");\r\n            let groupOriginals = series.get(\"groupDataWithOriginals\", false);\r\n            if (groupCallback) {\r\n                groupOriginals = true;\r\n            }\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            $array.each(intervals, (interval) => {\r\n                let previousTime = -Infinity;\r\n                let dataSetId = interval.timeUnit + interval.count;\r\n                series._dataSets[dataSetId] = [];\r\n                let newDataItem;\r\n                let sum = {};\r\n                let count = {};\r\n                let groupFieldValues = {};\r\n                let workingFields = {};\r\n                $array.each(fields, (field) => {\r\n                    sum[field] = 0;\r\n                    count[field] = 0;\r\n                    groupFieldValues[field] = series.get((field + \"Grouped\"));\r\n                    workingFields[field] = field + \"Working\";\r\n                });\r\n                let intervalDuration = $time.getDuration(interval.timeUnit);\r\n                let firstItem = dataItems[0];\r\n                let firstDate;\r\n                if (firstItem) {\r\n                    firstDate = new Date(dataItems[0].get(key));\r\n                }\r\n                let prevNewDataItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    let time = dataItem.get(key);\r\n                    let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\r\n                    let dataContext;\r\n                    if (previousTime < roundedTime - intervalDuration / 24) {\r\n                        dataContext = $object.copy(dataItem.dataContext);\r\n                        newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n                        newDataItem.setRaw(key, roundedTime);\r\n                        series._dataSets[dataSetId].push(newDataItem);\r\n                        $array.each(fields, (field) => {\r\n                            let value = dataItem.get(field);\r\n                            if ($type.isNumber(value)) {\r\n                                newDataItem.setRaw(field, value);\r\n                                newDataItem.setRaw(workingFields[field], value);\r\n                                count[field] = 1;\r\n                                sum[field] = value;\r\n                            }\r\n                            else {\r\n                                sum[field] = 0;\r\n                                count[field] = 0;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.set(\"originals\", [dataItem]);\r\n                        }\r\n                        if (groupCallback && prevNewDataItem) {\r\n                            groupCallback(prevNewDataItem, interval);\r\n                        }\r\n                        prevNewDataItem = newDataItem;\r\n                    }\r\n                    else {\r\n                        $array.each(fields, (field) => {\r\n                            let groupKey = groupFieldValues[field];\r\n                            let value = dataItem.get(field);\r\n                            if (value != null) {\r\n                                let currentValue = newDataItem.get(field);\r\n                                switch (groupKey) {\r\n                                    case \"close\":\r\n                                        newDataItem.setRaw(field, value);\r\n                                        break;\r\n                                    case \"sum\":\r\n                                        newDataItem.setRaw(field, currentValue + value);\r\n                                        break;\r\n                                    case \"open\":\r\n                                        break;\r\n                                    case \"low\":\r\n                                        if (value < currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"high\":\r\n                                        if (value > currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"average\":\r\n                                        count[field]++;\r\n                                        sum[field] += value;\r\n                                        let average = sum[field] / count[field];\r\n                                        newDataItem.setRaw(field, average);\r\n                                        break;\r\n                                    case \"extreme\":\r\n                                        if (Math.abs(value) > Math.abs(currentValue)) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                newDataItem.setRaw(workingFields[field], newDataItem.get(field));\r\n                                let dataContext = $object.copy(dataItem.dataContext);\r\n                                dataContext[key] = roundedTime;\r\n                                newDataItem.dataContext = dataContext;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.get(\"originals\").push(dataItem);\r\n                        }\r\n                    }\r\n                    previousTime = roundedTime;\r\n                });\r\n                if (groupCallback && prevNewDataItem) {\r\n                    groupCallback(prevNewDataItem, interval);\r\n                }\r\n            });\r\n            if (series._dataSetId) {\r\n                series.setDataSet(series._dataSetId);\r\n            }\r\n            this.markDirtySize();\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._groupingCalculated = false;\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * Returns a time interval axis would group data to for a specified duration.\r\n     *\r\n     * @since 5.2.1\r\n     */\r\n    getGroupInterval(duration) {\r\n        let baseInterval = this.get(\"baseInterval\");\r\n        let groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\"));\r\n        if ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\r\n            groupInterval = Object.assign({}, baseInterval);\r\n        }\r\n        return groupInterval;\r\n    }\r\n    /**\r\n     * Return `max` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Max\r\n     */\r\n    getIntervalMax(interval) {\r\n        return this._intervalMax[interval.timeUnit + interval.count];\r\n    }\r\n    /**\r\n     * Return `min` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Min\r\n     */\r\n    getIntervalMin(interval) {\r\n        return this._intervalMin[interval.timeUnit + interval.count];\r\n    }\r\n    _handleRangeChange() {\r\n        super._handleRangeChange();\r\n        let selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n        let selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n        if ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\r\n            if (this.get(\"endLocation\") == 0) {\r\n                selectionMax += 1;\r\n            }\r\n            if (this.get(\"groupData\") && !this._groupingCalculated) {\r\n                this._groupingCalculated = true;\r\n                let modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (!groupInterval) {\r\n                    groupInterval = this.getGroupInterval(modifiedDifference);\r\n                }\r\n                let current = this.getPrivate(\"groupInterval\");\r\n                if (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\r\n                    this._seriesDataGrouped = false;\r\n                    this.setPrivateRaw(\"groupInterval\", groupInterval);\r\n                    this._setBaseInterval(groupInterval);\r\n                    let newId = groupInterval.timeUnit + groupInterval.count;\r\n                    $array.each(this.series, (series) => {\r\n                        if (series.get(\"baseAxis\") === this) {\r\n                            series.setDataSet(newId);\r\n                        }\r\n                    });\r\n                    this.markDirtyExtremes();\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this._root.events.once(\"frameended\", () => {\r\n                            const type = \"groupintervalchanged\";\r\n                            if (this.events.isEnabled(type)) {\r\n                                this.events.dispatch(type, { type: type, target: this });\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n                    const start = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMin);\r\n                    });\r\n                    let startIndex = start.index;\r\n                    if (startIndex > 0) {\r\n                        startIndex -= 1;\r\n                    }\r\n                    selectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\r\n                    const end = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMax);\r\n                    });\r\n                    let endIndex = end.index;\r\n                    let endIndex2 = endIndex;\r\n                    if (endIndex2 > 1) {\r\n                        endIndex2--;\r\n                    }\r\n                    const firstDataItem = series.dataItems[startIndex];\r\n                    const lastDataItem = series.dataItems[endIndex2];\r\n                    let lastDate;\r\n                    let firstDate;\r\n                    if (firstDataItem) {\r\n                        firstDate = firstDataItem.get(fieldName);\r\n                    }\r\n                    if (lastDataItem) {\r\n                        lastDate = lastDataItem.get(fieldName);\r\n                    }\r\n                    let outOfSelection = false;\r\n                    if (lastDate != null && firstDate != null) {\r\n                        if (lastDate < selectionMin || firstDate > selectionMax) {\r\n                            outOfSelection = true;\r\n                        }\r\n                    }\r\n                    series.setPrivate(\"outOfSelection\", outOfSelection);\r\n                    series.setPrivate(\"startIndex\", startIndex);\r\n                    series.setPrivate(\"endIndex\", endIndex);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _adjustMinMax(min, max, gridCount, _strictMode) {\r\n        return { min: min, max: max, step: (max - min) / gridCount };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    intervalDuration() {\r\n        return this._intervalDuration;\r\n    }\r\n    _saveMinMax(min, max) {\r\n        let groupInterval = this.getPrivate(\"groupInterval\");\r\n        if (!groupInterval) {\r\n            groupInterval = this.get(\"baseInterval\");\r\n        }\r\n        let id = groupInterval.timeUnit + groupInterval.count;\r\n        this._intervalMin[id] = min;\r\n        this._intervalMax[id] = max;\r\n    }\r\n    _getM(timeUnit) {\r\n        if (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\r\n            return 1.05;\r\n        }\r\n        return 1.01;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n            const selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n            const renderer = this.get(\"renderer\");\r\n            const baseInterval = this.getPrivate(\"baseInterval\");\r\n            let value = selectionMin;\r\n            let i = 0;\r\n            const intervals = this.get(\"gridIntervals\");\r\n            let gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\r\n            if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                gridInterval = Object.assign({}, baseInterval);\r\n            }\r\n            const intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            this._intervalDuration = intervalDuration;\r\n            const nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\r\n            let previousValue = value - intervalDuration;\r\n            let format;\r\n            const formats = this.get(\"dateFormats\");\r\n            this.setPrivateRaw(\"gridInterval\", gridInterval);\r\n            while (value < selectionMax + intervalDuration) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                let endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n                endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                dataItem.setRaw(\"endValue\", endValue);\r\n                let date = new Date(value);\r\n                format = formats[gridInterval.timeUnit];\r\n                if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                    if (gridInterval.timeUnit != \"year\") {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n                            format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                        }\r\n                    }\r\n                }\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._root.dateFormatter.format(date, format));\r\n                }\r\n                this._prepareDataItem(dataItem, gridInterval.count);\r\n                previousValue = value;\r\n                value = endValue;\r\n                if (value == previousValue) {\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _updateFinals(start, end) {\r\n        this.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\r\n        this.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\r\n    }\r\n    _getDelta() {\r\n        this._deltaMinMax = this.baseDuration() / 2;\r\n    }\r\n    _fixMin(min) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\r\n    }\r\n    _fixMax(max) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\r\n    }\r\n    _updateDates(_date) {\r\n    }\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseDuration() {\r\n        return this._baseDuration;\r\n        //return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * Returns a duration of user-defined `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseMainDuration() {\r\n        return $time.getIntervalDuration(this.get(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(dataItem, fields) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!dataItem.open) {\r\n            dataItem.open = {};\r\n        }\r\n        if (!dataItem.close) {\r\n            dataItem.close = {};\r\n        }\r\n        $array.each(fields, (field) => {\r\n            let value = dataItem.get(field);\r\n            if ($type.isNumber(value)) {\r\n                let startTime = dataItem.open[field];\r\n                let endTime = dataItem.close[field];\r\n                // this is done to save cpu, as rounding is quite expensive, especially with timezone set. \r\n                // if value is between prev start and end, it means it didn't change, all is fine.\r\n                if (value >= startTime && value <= endTime) {\r\n                }\r\n                else {\r\n                    const firstDay = this._root.locale.firstDayOfWeek;\r\n                    const utc = this._root.utc;\r\n                    const timezone = this._root.timezone;\r\n                    const timeUnit = baseInterval.timeUnit;\r\n                    const count = baseInterval.count;\r\n                    startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n                    endTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\r\n                    endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                    dataItem.open[field] = startTime;\r\n                    dataItem.close[field] = endTime;\r\n                }\r\n                this._updateDates(startTime);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        let value = this.positionToValue(position);\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        let baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!$type.isNaN(value)) {\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const timeUnit = baseInterval.timeUnit;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            const count = baseInterval.count;\r\n            value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n            let duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\r\n            if (timezone) {\r\n                value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n                duration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\r\n            }\r\n            return this.valueToPosition(value + duration * location);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\r\n     * will adjust position by `tooltipIntervalOffset`.\r\n     *\r\n     * @param  position        Position\r\n     * @param  adjustPosition  Adjust position\r\n     * @return                 Tooltip text\r\n     */\r\n    getTooltipText(position, adjustPosition) {\r\n        //@todo number formatter + tag\r\n        if (this.getPrivate(\"min\") != null) {\r\n            let format = this.get(\"tooltipDateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n            let value = this.positionToValue(position);\r\n            if ($type.isNumber(value)) {\r\n                let date = new Date(value);\r\n                let baseInterval = this.getPrivate(\"baseInterval\");\r\n                let duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\r\n                if (adjustPosition !== false) {\r\n                    date = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration);\r\n                }\r\n                return this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position, location) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        if (location == null) {\r\n            location = 0.5;\r\n        }\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        const result = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n            let diValue = 0;\r\n            if (dataItem.open) {\r\n                diValue = dataItem.open[fieldName];\r\n            }\r\n            return $order.compare(diValue, value);\r\n        });\r\n        if (series.get(\"snapTooltip\")) {\r\n            let first = series.dataItems[result.index - 1];\r\n            let second = series.dataItems[result.index];\r\n            if (first && second) {\r\n                if (first.open && second.close) {\r\n                    let open = first.open[fieldName];\r\n                    let close = second.close[fieldName];\r\n                    if (Math.abs(value - open) > Math.abs(value - close)) {\r\n                        return second;\r\n                    }\r\n                }\r\n            }\r\n            if (first) {\r\n                return first;\r\n            }\r\n            if (second) {\r\n                return second;\r\n            }\r\n        }\r\n        else {\r\n            // @todo check if is in range\r\n            const dataItem = series.dataItems[result.index - 1];\r\n            if (dataItem) {\r\n                if (dataItem.open && dataItem.close) {\r\n                    let open = dataItem.open[fieldName];\r\n                    let close = dataItem.close[fieldName];\r\n                    if (value >= open && value <= close) {\r\n                        return dataItem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(dataItem, nextItem, autoGapCount, fieldName) {\r\n        const value1 = dataItem.get(fieldName);\r\n        const value2 = nextItem.get(fieldName);\r\n        if (value2 - value1 > this.baseDuration() * autoGapCount) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` dates.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start Date\r\n     * @param  end       End Date\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToDates(start, end, duration) {\r\n        this.zoomToValues(start.getTime(), end.getTime(), duration);\r\n    }\r\n    /**\r\n     * Returns a `Date` object corresponding to specific position within plot\r\n     * area.\r\n     *\r\n     * @param   position  Pposition\r\n     * @return            Date\r\n     */\r\n    positionToDate(position) {\r\n        return new Date(this.positionToValue(position));\r\n    }\r\n    /**\r\n     * Returns a relative position within plot area that corresponds to specific\r\n     * date.\r\n     *\r\n     * @param   date  Date\r\n     * @return        Position\r\n     */\r\n    dateToPosition(date) {\r\n        return this.valueToPosition(date.getTime());\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this._intervalDuration / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(DateAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"DateAxis\"\r\n});\r\nObject.defineProperty(DateAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ValueAxis.classNames.concat([DateAxis.className])\r\n});\r\n//# sourceMappingURL=DateAxis.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        axis.set(\"width\", p100);\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axis.disposeDataItem(axisDataItem);\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\") {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\") {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            const positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\r\n            const positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                if (!bullet.getPrivate(\"hidden\")) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n                else {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n                let w = right - left;\r\n                let h = bottom - top;\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                let x = left + w * locationX;\r\n                let y = bottom - h * locationY;\r\n                sprite.set(\"x\", x);\r\n                sprite.set(\"y\", y);\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetGrouping() {\r\n        $object.each(this._dataSets, (_key, dataSet) => {\r\n            if (dataSet != this._mainDataItems) {\r\n                $array.each(dataSet, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n        });\r\n        this._dataSets = {};\r\n        this._dataItems = this.mainDataItems;\r\n    }\r\n    _handleDataSetChange() {\r\n        if (this.bullets.length > 0) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let bullets = dataItem.bullets;\r\n                if (bullets) {\r\n                    $array.each(bullets, (bullet) => {\r\n                        if (bullet) {\r\n                            let sprite = bullet.get(\"sprite\");\r\n                            if (sprite) {\r\n                                sprite.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        this.updateLegendMarker(dataItem);\r\n        this.updateLegendValue(dataItem);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            if (!this.isHidden()) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    // todo description\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","import { __awaiter } from \"tslib\";\r\nimport { XYSeries } from \"./XYSeries\";\r\nimport { Percent } from \"../../../core/util/Percent\";\r\nimport { visualSettings } from \"../../../core/render/Graphics\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n/**\r\n * Base class for all \"column-based\" series\r\n */\r\nexport class BaseColumnSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_ph\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _makeGraphics(listTemplate, dataItem) {\r\n        return this.makeColumn(dataItem, listTemplate);\r\n    }\r\n    _makeFieldNames() {\r\n        super._makeFieldNames();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const categoryAxis = \"CategoryAxis\";\r\n        const valueAxis = \"ValueAxis\";\r\n        if (xAxis.isType(categoryAxis)) {\r\n            if (!this.get(\"openCategoryXField\")) {\r\n                this._xOpenField = this._xField;\r\n            }\r\n        }\r\n        if (xAxis.isType(valueAxis)) {\r\n            if (!this.get(\"openValueXField\")) {\r\n                this._xOpenField = this._xField;\r\n            }\r\n        }\r\n        if (yAxis.isType(categoryAxis)) {\r\n            if (!this.get(\"openCategoryYField\")) {\r\n                this._yOpenField = this._yField;\r\n            }\r\n        }\r\n        if (yAxis.isType(valueAxis)) {\r\n            if (!this.get(\"openValueYField\")) {\r\n                this._yOpenField = this._yField;\r\n            }\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const len = this.dataItems.length;\r\n        const startIndex = Math.max(0, this.startIndex() - 2);\r\n        const endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n        if (xAxis.inited && yAxis.inited) {\r\n            for (let i = startIndex; i <= endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                this._createGraphics(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            this._ph = chart.plotContainer.height();\r\n            this._pw = chart.plotContainer.width();\r\n        }\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const columnsTemplate = this.columns.template;\r\n        if (this.isDirty(\"fill\")) {\r\n            if (columnsTemplate.get(\"fill\") == null) {\r\n                columnsTemplate.set(\"fill\", this.get(\"fill\"));\r\n            }\r\n        }\r\n        if (this.isDirty(\"stroke\")) {\r\n            if (columnsTemplate.get(\"stroke\") == null) {\r\n                columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\r\n            }\r\n        }\r\n        let index = 0;\r\n        let clusterCount = 0;\r\n        let i = 0;\r\n        $array.each(baseAxis.series, (series) => {\r\n            if (series instanceof BaseColumnSeries) {\r\n                const stacked = series.get(\"stacked\");\r\n                if (stacked && i == 0) {\r\n                    clusterCount++;\r\n                }\r\n                if (!stacked && series.get(\"clustered\")) {\r\n                    clusterCount++;\r\n                }\r\n            }\r\n            if (series === this) {\r\n                index = clusterCount - 1;\r\n            }\r\n            i++;\r\n        });\r\n        if (!this.get(\"clustered\")) {\r\n            index = 0;\r\n            clusterCount = 1;\r\n        }\r\n        if (clusterCount === 0) {\r\n            clusterCount = 1;\r\n            index = 0;\r\n        }\r\n        const xRenderer = xAxis.get(\"renderer\");\r\n        const yRenderer = yAxis.get(\"renderer\");\r\n        const cellStartLocation = \"cellStartLocation\";\r\n        const cellEndLocation = \"cellEndLocation\";\r\n        const cellLocationX0 = xRenderer.get(cellStartLocation, 0);\r\n        const cellLocationX1 = xRenderer.get(cellEndLocation, 1);\r\n        const cellLocationY0 = yRenderer.get(cellStartLocation, 0);\r\n        const cellLocationY1 = yRenderer.get(cellEndLocation, 1);\r\n        this._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\r\n        this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\r\n        ;\r\n        this._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\r\n        this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\r\n                const len = this.dataItems.length;\r\n                let startIndex = Math.max(0, this.startIndex() - 2);\r\n                let endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n                for (let i = 0; i < startIndex; i++) {\r\n                    this._toggleColumn(this.dataItems[i], false);\r\n                }\r\n                let previous = this.dataItems[startIndex];\r\n                for (let i = startIndex; i <= endIndex; i++) {\r\n                    let dataItem = this.dataItems[i];\r\n                    if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                        previous = dataItem;\r\n                        if (i > 0 && startIndex > 0) {\r\n                            for (let j = i - 1; j >= 0; j--) {\r\n                                let dataItem = this.dataItems[j];\r\n                                if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                                    previous = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this._toggleColumn(dataItem, false);\r\n                    }\r\n                }\r\n                for (let i = startIndex; i <= endIndex; i++) {\r\n                    let dataItem = this.dataItems[i];\r\n                    this._updateGraphics(dataItem, previous);\r\n                    if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                        previous = dataItem;\r\n                    }\r\n                }\r\n                for (let i = endIndex + 1; i < len; i++) {\r\n                    this._toggleColumn(this.dataItems[i], false);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        this.updateLegendMarker(this.get(\"tooltipDataItem\"));\r\n        super._updateChildren();\r\n    }\r\n    _createGraphics(dataItem) {\r\n        let graphics = dataItem.get(\"graphics\");\r\n        if (!graphics) {\r\n            graphics = this._makeGraphics(this.columns, dataItem);\r\n            dataItem.set(\"graphics\", graphics);\r\n            graphics._setDataItem(dataItem);\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    markerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\r\n                }\r\n            }\r\n            this.axisRanges.each((axisRange) => {\r\n                const container = axisRange.container;\r\n                const graphicsArray = dataItem.get(\"rangeGraphics\", []);\r\n                dataItem.set(\"rangeGraphics\", graphicsArray);\r\n                const rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\r\n                graphicsArray.push(rangeGraphics);\r\n                rangeGraphics.setPrivate(\"list\", axisRange.columns);\r\n                container.children.push(rangeGraphics);\r\n            });\r\n        }\r\n    }\r\n    _updateGraphics(dataItem, previousDataItem) {\r\n        let graphics = dataItem.get(\"graphics\");\r\n        //if (!graphics) {\r\n        //\tthis._createGraphics(dataItem);\r\n        //\tgraphics = dataItem.get(\"graphics\")!;\r\n        //}\r\n        const xField = this._xField;\r\n        const yField = this._yField;\r\n        const valueX = dataItem.get(xField);\r\n        const valueY = dataItem.get(yField);\r\n        if (valueX != null && valueY != null) {\r\n            const xOpenField = this._xOpenField;\r\n            const yOpenField = this._yOpenField;\r\n            const locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            const locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            const openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\r\n            const openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\r\n            const width = graphics.get(\"width\");\r\n            const height = graphics.get(\"height\");\r\n            const stacked = this.get(\"stacked\");\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const xStart = xAxis.get(\"start\");\r\n            const xEnd = xAxis.get(\"end\");\r\n            const yStart = yAxis.get(\"start\");\r\n            const yEnd = yAxis.get(\"end\");\r\n            let l;\r\n            let r;\r\n            let t;\r\n            let b;\r\n            let vcy = this.get(\"vcy\", 1);\r\n            let vcx = this.get(\"vcx\", 1);\r\n            let fitW = false;\r\n            let fitH = false;\r\n            if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\r\n                let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                let endLocation = this._aLocationX1 + locationX - 0.5;\r\n                if (width instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                l = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                endLocation = this._aLocationY1 + locationY - 0.5;\r\n                if (height instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                t = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                b = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                dataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\r\n            }\r\n            else if (xAxis === baseAxis) {\r\n                let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                let endLocation = this._aLocationX1 + locationX - 0.5;\r\n                if (width instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                l = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                t = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\r\n                if (this._yOpenField !== this._yField) {\r\n                    b = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\r\n                }\r\n                else {\r\n                    if (stacked) {\r\n                        let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                        if (stackToItemY) {\r\n                            b = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\r\n                        }\r\n                        else {\r\n                            b = yAxis.basePosition();\r\n                        }\r\n                    }\r\n                    else {\r\n                        b = yAxis.basePosition();\r\n                    }\r\n                }\r\n                dataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\r\n                fitH = true;\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                let startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                let endLocation = this._aLocationY1 + locationY - 0.5;\r\n                if (height instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                t = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                b = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\r\n                if (this._xOpenField !== this._xField) {\r\n                    l = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\r\n                }\r\n                else {\r\n                    if (stacked) {\r\n                        let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                        if (stackToItemX) {\r\n                            l = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\r\n                        }\r\n                        else {\r\n                            l = xAxis.basePosition();\r\n                        }\r\n                    }\r\n                    else {\r\n                        l = xAxis.basePosition();\r\n                    }\r\n                }\r\n                fitW = true;\r\n                dataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\r\n            }\r\n            this._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n            if ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\r\n                this._toggleColumn(dataItem, false);\r\n            }\r\n            else {\r\n                this._toggleColumn(dataItem, true);\r\n            }\r\n            let rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    this._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n                });\r\n            }\r\n            this._applyGraphicsStates(dataItem, previousDataItem);\r\n        }\r\n    }\r\n    _updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH) {\r\n        const width = graphics.get(\"width\");\r\n        const height = graphics.get(\"height\");\r\n        const maxWidth = graphics.get(\"maxWidth\");\r\n        const maxHeight = graphics.get(\"maxHeight\");\r\n        const ptl = this.getPoint(l, t);\r\n        const pbr = this.getPoint(r, b);\r\n        const tooltipPoint = dataItem.get(\"point\");\r\n        if (tooltipPoint) {\r\n            const point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\r\n            tooltipPoint.x = point.x + this._x;\r\n            tooltipPoint.y = point.y + this._y;\r\n        }\r\n        l = ptl.x;\r\n        r = pbr.x;\r\n        t = ptl.y;\r\n        b = pbr.y;\r\n        if ($type.isNumber(width)) {\r\n            const offset = ((r - l) - width) / 2;\r\n            l += offset;\r\n            r -= offset;\r\n        }\r\n        if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n            const offset = ((r - l) - maxWidth) / 2;\r\n            l += offset;\r\n            r -= offset;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            const offset = ((b - t) - height) / 2;\r\n            t += offset;\r\n            b -= offset;\r\n        }\r\n        if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n            const offset = ((b - t) - maxHeight) / 2;\r\n            t += offset;\r\n            b -= offset;\r\n        }\r\n        if (this.get(\"adjustBulletPosition\")) {\r\n            if (fitW) {\r\n                r = Math.min(Math.max(0, r), this._pw);\r\n                l = Math.min(Math.max(0, l), this._pw);\r\n            }\r\n            if (fitH) {\r\n                t = Math.min(Math.max(0, t), this._ph);\r\n                b = Math.min(Math.max(0, b), this._ph);\r\n            }\r\n        }\r\n        dataItem.setRaw(\"left\", l);\r\n        dataItem.setRaw(\"right\", r);\r\n        dataItem.setRaw(\"top\", t);\r\n        dataItem.setRaw(\"bottom\", b);\r\n        graphics.setPrivate(\"width\", r - l);\r\n        graphics.setPrivate(\"height\", b - t);\r\n        graphics.set(\"x\", l);\r\n        graphics.set(\"y\", b - (b - t));\r\n    }\r\n    _handleDataSetChange() {\r\n        super._handleDataSetChange();\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            this._toggleColumn(dataItem, false);\r\n        });\r\n    }\r\n    _applyGraphicsStates(dataItem, previousDataItem) {\r\n        const graphics = dataItem.get(\"graphics\");\r\n        const dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\r\n        const riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\r\n        const dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\r\n        const riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\r\n        if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            let open;\r\n            let close;\r\n            let previousClose;\r\n            if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\r\n                open = dataItem.get(this._yOpenField);\r\n                close = dataItem.get(this._yField);\r\n                previousClose = previousDataItem.get(this._yField);\r\n            }\r\n            else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\r\n                open = dataItem.get(this._xOpenField);\r\n                close = dataItem.get(this._xField);\r\n                previousClose = previousDataItem.get(this._xField);\r\n            }\r\n            if ($type.isNumber(open) && $type.isNumber(close)) {\r\n                if (close < open) {\r\n                    if (dropFromOpen) {\r\n                        dropFromOpen.apply();\r\n                    }\r\n                }\r\n                else {\r\n                    if (riseFromOpen) {\r\n                        riseFromOpen.apply();\r\n                    }\r\n                }\r\n                if ($type.isNumber(previousClose)) {\r\n                    if (close < previousClose) {\r\n                        if (dropFromPrevious) {\r\n                            dropFromPrevious.apply();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (riseFromPrevious) {\r\n                            riseFromPrevious.apply();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const graphics = dataItem.get(\"graphics\");\r\n        if (graphics) {\r\n            this.columns.removeValue(graphics);\r\n            graphics.dispose();\r\n        }\r\n        const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n        if (rangeGraphics) {\r\n            $array.each(rangeGraphics, (graphics) => {\r\n                const list = graphics.getPrivate(\"list\");\r\n                if (list) {\r\n                    list.removeValue(graphics);\r\n                }\r\n                graphics.dispose();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                promises.push(graphics.hide(duration));\r\n            }\r\n            const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    promises.push(graphics.hide(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _toggleColumn(dataItem, visible) {\r\n        const graphics = dataItem.get(\"graphics\");\r\n        if (graphics) {\r\n            graphics.setPrivate(\"visible\", visible);\r\n        }\r\n        const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n        if (rangeGraphics) {\r\n            $array.each(rangeGraphics, (graphics) => {\r\n                graphics.setPrivate(\"visible\", visible);\r\n            });\r\n        }\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.setPrivate(\"hidden\", !visible);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                promises.push(graphics.show(duration));\r\n            }\r\n            const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    promises.push(graphics.show(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        let legendDataItem = this.get(\"legendDataItem\");\r\n        if (this.get(\"useLastColorForLegendMarker\")) {\r\n            if (!dataItem) {\r\n                const lastDataItem = this.dataItems[this.endIndex() - 1];\r\n                if (lastDataItem) {\r\n                    dataItem = lastDataItem;\r\n                }\r\n            }\r\n        }\r\n        if (legendDataItem) {\r\n            let graphics = this.columns.template;\r\n            if (dataItem) {\r\n                let column = dataItem.get(\"graphics\");\r\n                if (column) {\r\n                    graphics = column;\r\n                }\r\n            }\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\r\n                    $array.each(visualSettings, (setting) => {\r\n                        markerRectangle.set(setting, graphics.get(setting, this.get(setting)));\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            return super._getTooltipTarget(dataItem);\r\n        }\r\n        let column = dataItem.get(\"graphics\");\r\n        if (column) {\r\n            return column;\r\n        }\r\n        return this;\r\n    }\r\n}\r\nObject.defineProperty(BaseColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"BaseColumnSeries\"\r\n});\r\nObject.defineProperty(BaseColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([BaseColumnSeries.className])\r\n});\r\n//# sourceMappingURL=BaseColumnSeries.js.map","import { BaseColumnSeries } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[TemplateList]] of all columns in series.\r\n         *\r\n         * `columns.template` can be used to set default settings for all columns,\r\n         * or to change on existing ones.\r\n         */\r\n        Object.defineProperty(this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n            }, [this.columns.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeColumn(dataItem, listTemplate) {\r\n        const column = this.mainContainer.children.push(listTemplate.make());\r\n        column._setDataItem(dataItem);\r\n        listTemplate.push(column);\r\n        return column;\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.columns = new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n            position: \"absolute\",\r\n            themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n        }, [this.columns.template, axisRange.columns.template]));\r\n    }\r\n}\r\nObject.defineProperty(ColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColumnSeries\"\r\n});\r\nObject.defineProperty(ColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\r\n});\r\n//# sourceMappingURL=ColumnSeries.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove(ev.keyCode);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(keyCode) {\r\n        let dir = \"\";\r\n        let position = 0;\r\n        let increment = 0.1;\r\n        const chart = this.chart;\r\n        if (this._root.focused(this.lineX)) {\r\n            if (chart && chart.xAxes.length) {\r\n                increment = chart.xAxes.getIndex(0).getCellWidthPosition();\r\n            }\r\n            position = this.getPrivate(\"positionX\", 0);\r\n            dir = \"positionX\";\r\n            if (keyCode == 37) {\r\n                position -= increment;\r\n            }\r\n            else if (keyCode == 39) {\r\n                position += increment;\r\n            }\r\n        }\r\n        else if (this._root.focused(this.lineY)) {\r\n            if (chart && chart.yAxes.length) {\r\n                increment = chart.yAxes.getIndex(0).getCellWidthPosition();\r\n            }\r\n            position = this.getPrivate(\"positionY\", 0);\r\n            dir = \"positionY\";\r\n            if (keyCode == 38) {\r\n                position -= increment;\r\n            }\r\n            else if (keyCode == 40) {\r\n                position += increment;\r\n            }\r\n        }\r\n        if (position < 0) {\r\n            position = 0;\r\n        }\r\n        else if (position > 1) {\r\n            position = 1;\r\n        }\r\n        if (dir != \"\") {\r\n            this.set(dir, position);\r\n        }\r\n    }\r\n    _handleLineFocus(_line) {\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\"),\r\n            positionY: this.getPrivate(\"positionY\"),\r\n            alwaysShow: true\r\n        });\r\n    }\r\n    _handleLineBlur(_line) {\r\n        this.setAll({\r\n            positionX: undefined,\r\n            positionY: undefined,\r\n            alwaysShow: false\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event);\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = event.point;\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = event.point;\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                    else {\r\n                        const type = \"selectcancelled\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = event.point;\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent, originalEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { AnimatedTheme } from \"../.internal/themes/AnimatedTheme\";\r\nexport default AnimatedTheme;\r\n//# sourceMappingURL=Animated.js.map","<template>\n  <v-container class=\"my-0 mx-0 px-0 py-0\">\n    <v-row>\n      <v-col>\n        <v-hover v-slot=\"{ hover }\" class=\"transition-swing\">\n          <v-sheet rounded :elevation=\"hover ? 8 : 2\">\n            <div id=\"chartdiv\" ref=\"chartdiv\">\n            </div>\n          </v-sheet>\n        </v-hover>\n      </v-col>\n      <v-col>\n        <v-hover v-slot=\"{ hover }\" class=\"transition-swing\">\n        <v-sheet rounded :elevation=\"hover ? 8 : 2\">\n          <div id=\"piechartdiv\" ref=\"piechartdiv\">\n          </div>\n        </v-sheet>\n        </v-hover>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-hover v-slot=\"{ hover }\" class=\"transition-swing\">\n        <v-sheet rounded :elevation=\"hover ? 8 : 2\">\n          <div id=\"ganttchartdiv\" ref=\"ganttchartdiv\">\n          </div>\n        </v-sheet>\n        </v-hover>\n      </v-col>\n      <v-col>\n        <v-hover v-slot=\"{ hover }\" class=\"transition-swing\">\n        <v-sheet rounded :elevation=\"hover ? 8 : 2\">\n          <div id=\"xychartdiv\" ref=\"xychartdiv\">\n          </div>\n        </v-sheet>\n        </v-hover>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport * as am5 from '@amcharts/amcharts5';\nimport * as am5hierarchy from \"@amcharts/amcharts5/hierarchy\";\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport am5themes_animated from \"@amcharts/amcharts5/themes/Animated\";\n\nimport bubbleTreeJSON from \"@/json/statistic/bubbleTreeJSON.json\"\nimport pieChartJSON from \"@/json/statistic/pieChartJSON.json\"\nimport ganttChartJSON from \"@/json/statistic/ganttChartJSON.json\"\nimport xyChartJSON from \"@/json/statistic/xyChartJSON.json\"\n\n\nexport default {\n  name: 'StatisticView',\n  components: {},\n  mounted() {\n    this.bubbleTree()\n    this.pieChart()\n    this.ganttChart()\n    this.xyChart()\n  },\n  methods: {\n    bubbleTree() {\n      let root = am5.Root.new(this.$refs.chartdiv);\n      root.setThemes([am5themes_animated.new(root)]);\n      // Create custom theme...\n      var data = bubbleTreeJSON;\n      // Create wrapper container\n      var container = root.container.children.push(am5.Container.new(root, {\n        width: am5.percent(100),\n        height: am5.percent(100),\n        layout: root.verticalLayout\n      }));\n// Create series\n// https://www.amcharts.com/docs/v5/charts/hierarchy/#Adding\n      var series = container.children.push(am5hierarchy.ForceDirected.new(root, {\n        singleBranchOnly: false,\n        downDepth: 3,\n        topDepth: 1,\n        initialDepth: 3,\n        valueField: \"value\",\n        categoryField: \"name\",\n        childDataField: \"children\",\n        idField: \"name\",\n        linkWithField: \"linkWith\",\n        manyBodyStrength: -30,\n        centerStrength: 1\n      }));\n      series.get(\"colors\").setAll({\n        step: 2\n      });\n      series.links.template.set(\"strength\", 1);\n      series.data.setAll([data]);\n      series.set(\"selectedDataItem\", series.dataItems[0]);\n// Make stuff animate on load\n      series.appear(1000, 100);\n    },\n    pieChart() {\n      let root = am5.Root.new(this.$refs.piechartdiv);\n      root.setThemes([am5themes_animated.new(root)]);\n      // Create custom theme...\n      var data = pieChartJSON;\n// Create chart\n// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n      var chart = root.container.children.push(am5percent.PieChart.new(root, {\n        layout: root.verticalLayout\n      }));\n// Create series\n// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n      var series = chart.series.push(am5percent.PieSeries.new(root, {\n        valueField: \"value\",\n        categoryField: \"category\"\n      }));\n// Set data\n// https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n      series.data.setAll(data);\n    },\n    ganttChart() {\n      let root = am5.Root.new(this.$refs.ganttchartdiv);\n      root.setThemes([am5themes_animated.new(root)]);\n      root.dateFormatter.setAll({\n        dateFormat: \"yyyy-MM-dd\",\n        dateFields: [\"valueX\", \"openValueX\"]\n      });\n// Set themes\n// https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([\n        am5themes_animated.new(root)\n      ]);\n// Create chart\n// https://www.amcharts.com/docs/v5/charts/xy-chart/\n      var chart = root.container.children.push(am5xy.XYChart.new(root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        layout: root.verticalLayout\n      }));\n// Add legend\n// https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\n      var legend = chart.children.push(am5.Legend.new(root, {\n        centerX: am5.p50,\n        x: am5.p50\n      }))\n      var colors = chart.get(\"colors\");\n// Data\n      var data = [\n        {\n          category: \"John\",\n          fromDate: \"2018-01-01 08:00\",\n          toDate: \"2018-01-01 10:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(0), 0)\n          }\n        },\n        {\n          category: \"John\",\n          fromDate: \"2018-01-01 12:00\",\n          toDate: \"2018-01-01 15:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(0), 0.4)\n          }\n        },\n        {\n          category: \"John\",\n          fromDate: \"2018-01-01 15:30\",\n          toDate: \"2018-01-01 21:30\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(0), 0.8)\n          }\n        },\n\n        {\n          category: \"Jane\",\n          fromDate: \"2018-01-01 09:00\",\n          toDate: \"2018-01-01 12:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(2), 0)\n          }\n        },\n        {\n          category: \"Jane\",\n          fromDate: \"2018-01-01 13:00\",\n          toDate: \"2018-01-01 17:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(2), 0.4)\n          }\n        },\n\n        {\n          category: \"Peter\",\n          fromDate: \"2018-01-01 11:00\",\n          toDate: \"2018-01-01 16:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(4), 0)\n          }\n        },\n        {\n          category: \"Peter\",\n          fromDate: \"2018-01-01 16:00\",\n          toDate: \"2018-01-01 19:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(4), 0.4)\n          }\n        },\n\n        {\n          category: \"Melania\",\n          fromDate: \"2018-01-01 16:00\",\n          toDate: \"2018-01-01 20:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(6), 0)\n          }\n        },\n        {\n          category: \"Melania\",\n          fromDate: \"2018-01-01 20:30\",\n          toDate: \"2018-01-02 00:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(6), 0.4)\n          }\n        },\n\n        {\n          category: \"Donald\",\n          fromDate: \"2018-01-01 13:00\",\n          toDate: \"2018-01-02 00:00\",\n          columnSettings: {\n            fill: am5.Color.brighten(colors.getIndex(8), 0)\n          }\n        }\n      ];\n// Create axes\n// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n      var yAxis = chart.yAxes.push(\n          am5xy.CategoryAxis.new(root, {\n            categoryField: \"category\",\n            renderer: am5xy.AxisRendererY.new(root, {inversed: true}),\n            tooltip: am5.Tooltip.new(root, {\n              themeTags: [\"axis\"],\n              animationDuration: 200\n            })\n          })\n      );\n      yAxis.data.setAll([\n        {category: \"John\"},\n        {category: \"Jane\"},\n        {category: \"Peter\"},\n        {category: \"Melania\"},\n        {category: \"Donald\"}\n      ]);\n      var xAxis = chart.xAxes.push(\n          am5xy.DateAxis.new(root, {\n            baseInterval: {timeUnit: \"minute\", count: 1},\n            renderer: am5xy.AxisRendererX.new(root, {strokeOpacity: 0.1})\n          })\n      );\n// Add series\n// https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n      var series = chart.series.push(am5xy.ColumnSeries.new(root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        openValueXField: \"fromDate\",\n        valueXField: \"toDate\",\n        categoryYField: \"category\",\n        sequencedInterpolation: true\n      }));\n      series.columns.template.setAll({\n        templateField: \"columnSettings\",\n        strokeOpacity: 0,\n        tooltipText: \"{category}: {openValueX.formatDate('yyyy-MM-dd HH:mm')} - {valueX.formatDate('yyyy-MM-dd HH:mm')}\"\n      });\n      series.data.processor = am5.DataProcessor.new(root, {\n        dateFields: [\"fromDate\", \"toDate\"],\n        dateFormat: \"yyyy-MM-dd HH:mm\"\n      });\n      series.data.setAll(data);\n// Add scrollbars\n      chart.set(\"scrollbarX\", am5.Scrollbar.new(root, {\n        orientation: \"horizontal\"\n      }));\n// Make stuff animate on load\n// https://www.amcharts.com/docs/v5/concepts/animations/\n      series.appear();\n      chart.appear(1000, 100);\n    },\n    xyChart() {\n      let root = am5.Root.new(this.$refs.xychartdiv);\n      root.setThemes([am5themes_animated.new(root)]);\n// Set themes\n// https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([\n        am5themes_animated.new(root)\n      ]);\n// Create chart\n// https://www.amcharts.com/docs/v5/charts/xy-chart/\n      var chart = root.container.children.push(am5xy.XYChart.new(root, {\n        panX: true,\n        panY: true,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        pinchZoomX: true\n      }));\n// Add cursor\n// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\n      var cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\n      cursor.lineY.set(\"visible\", false);\n// Create axes\n// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n      var xRenderer = am5xy.AxisRendererX.new(root, {minGridDistance: 30});\n      xRenderer.labels.template.setAll({\n        rotation: -90,\n        centerY: am5.p50,\n        centerX: am5.p100,\n        paddingRight: 15\n      });\n      xRenderer.grid.template.setAll({\n        location: 1\n      })\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {\n        maxDeviation: 0.3,\n        categoryField: \"country\",\n        renderer: xRenderer,\n        tooltip: am5.Tooltip.new(root, {})\n      }));\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\n        maxDeviation: 0.3,\n        renderer: am5xy.AxisRendererY.new(root, {\n          strokeOpacity: 0.1\n        })\n      }));\n// Create series\n// https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n      var series = chart.series.push(am5xy.ColumnSeries.new(root, {\n        name: \"Series 1\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value\",\n        sequencedInterpolation: true,\n        categoryXField: \"country\",\n        tooltip: am5.Tooltip.new(root, {\n          labelText: \"{valueY}\"\n        })\n      }));\n      series.columns.template.setAll({cornerRadiusTL: 5, cornerRadiusTR: 5, strokeOpacity: 0});\n      series.columns.template.adapters.add(\"fill\", function (fill, target) {\n        return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n      });\n      series.columns.template.adapters.add(\"stroke\", function (stroke, target) {\n        return chart.get(\"colors\").getIndex(series.columns.indexOf(target));\n      });\n// Set data\n      var data = xyChartJSON;\n      xAxis.data.setAll(data);\n      series.data.setAll(data);\n// Make stuff animate on load\n// https://www.amcharts.com/docs/v5/concepts/animations/\n      series.appear(1000);\n      chart.appear(1000, 100);\n    }\n  }\n}\n</script>\n<style>\n#chartdiv {\n  width: 100%;\n  height: 300px;\n}\n\n#piechartdiv {\n  width: 100%;\n  height: 300px;\n}\n\n#ganttchartdiv {\n  width: 100%;\n  height: 300px;\n}\n\n#xychartdiv {\n  width: 100%;\n  height: 300px;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StatisticView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StatisticView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatisticView.vue?vue&type=template&id=48bb3832&\"\nimport script from \"./StatisticView.vue?vue&type=script&lang=js&\"\nexport * from \"./StatisticView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StatisticView.vue?vue&type=style&index=0&id=48bb3832&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["staticClass","scopedSlots","hover","_c","attrs","fn","indexOf","array","value","length","i","any","test","map","output","Array","each","eachReverse","eachContinue","remove","element","found","index","splice","removeFirst","move","toIndex","removeIndex","push","insertIndex","pushOne","copy","findIndex","matches","findIndexReverse","find","findReverse","getSortedIndex","ordering","start","end","pivot","order","getFirstSortedIndex","keepIf","keep","constructor","Object","defineProperty","this","enumerable","configurable","writable","_disposed","isDisposed","dispose","_dispose","Disposer","ArrayDisposer","super","arguments","_disposers","x","disposers","CounterDisposer","increment","_counter","Number","getType","toString","call","toNumber","isNumber","converted","isString","replace","toDate","isDate","Date","num","numberToString","Infinity","negative","Math","abs","res","parsed","exec","digits","decimals","undefined","exponent","zeros","repeat","slice","string","amount","join","isObject","isArray","PLACEHOLDER","PLACEHOLDER2","_listeners","_killed","_disabled","_iterating","_enabled","a","disposer","hasListeners","hasListenersByType","type","killed","enable","disable","enableType","disableType","_removeListener","listener","Error","_removeExistingListener","once","callback","context","_eachListener","info","isEnabled","removeType","has","_shouldDispatch","count","dispatch","event","_on","shouldClone","onAll","_type","on","off","copyFrom","source","checkBounds","len","List","initial","_values","values","contains","removeValue","hasIndex","getIndex","_onPush","newValue","events","target","_onInsertIndex","_onSetIndex","oldValue","_onRemoveIndex","_onMoveIndex","oldIndex","newIndex","_onClear","oldValues","setIndex","swap","b","value_a","value_b","moveValue","unshift","pushAll","pop","shift","setAll","newArray","old","clear","Symbol","iterator","f","ListAutoDispose","autoDispose","ListTemplate","template","make","Children","container","_container","_events","change","_onRemoved","_onInserted","child","_setParent","childrenDisplay","_childrenDisplay","addChild","_display","addChildAt","removeChild","markDirtyBounds","markDirty","Percent","percent","_value","interpolate","min","max","static","p100","p50","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","create","SuppressedError","removeElement","el","parentNode","addEventListener","dom","options","removeEventListener","onZoom","window","_ev","supports","cap","hasOwnProperty","getPointerId","id","pointerId","document","activeElement","body","blur","input","createElement","style","position","top","left","appendChild","focus","getRendererEvent","key","isTouchEvent","ev","Touch","PointerEvent","pointerType","MouseEvent","match","setStyle","property","getStyle","getEventTarget","composedPath","path","cursor","host","isLocalEvent","root","setInteractive","interactive","pointerEvents","iOS","navigator","vendor","getSafeResolution","relativeToValue","full","decimalPlaces","number","padString","char","trimLeft","text","trimRight","trim","getFormat","format","toLowerCase","hints","cleanFormat","stripTags","escapeForRgex","getYearDay","date","utc","getFullYear","diff","getTime","getTimezoneOffset","oneDay","floor","getWeek","_utc","d","UTC","getMonth","getDate","day","getUTCDay","setUTCDate","getUTCDate","firstDay","getUTCFullYear","ceil","getWeekYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","setUTCFullYear","getDay","get12Hours","hours","base","getTimeZone","long","savings","timezone","d1","toLocaleString","timeZone","d2","timeZoneName","substr","wotz","wtz","utcDate","tzDate","capitalizeFirst","charAt","toUpperCase","hslToRgb","color","r","g","h","s","l","hue2rgb","p","q","t","round","rgbToHsl","lighten","rgb","getLightnessStep","brighten","isLight","saturate","saturation","hsl","alternativeColor","lightAlternative","darkAlternative","light","dark","mergeTags","tags1","tags2","filter","self","sameBounds","right","bottom","string2hex","parseInt","rgba2hex","hex","val","Color","fromAny","_hex","toCSS","alpha","toCSSHex","toHSL","fromRGB","fromString","fromCSS","fromHex","from","to","mode","fromHSL","range","keys","object","keysOrdered","sort","assign","forEach","hasKey","waitForAnimations","animations","promises","_","animation","waitForStop","all","defaultInterpolate","percentInterpolate","colorInterpolate","getInterpolate","linear","cubic","out","ease","tau","PI","amplitude","period","asin","State","entity","settings","_entity","_settings","_userSettings","get","fallback","setRaw","set","_eachSetting","seen","defaultState","states","lookup","applyAnimate","duration","stateAnimationDuration","easing","stateAnimationEasing","animate","States","name","_states","state","newState","_applyState","_applyStateAnimated","Registry","registry","compare","compareArray","leftLength","rightLength","compareNumber","Adapters","add","callbacks","_callbacks","_markDirtyKey","fold","Animation","loops","startingTime","_animation","_from","_to","_duration","_easing","_loops","_interpolate","_oldTime","playing","_playing","stopped","_stopped","stop","pause","play","_startAnimation","percentage","_time","_reject","_checkEnded","_run","currentTime","_reset","counter","Settings","_checkDirty","_userProperties","resetUserSettings","_runAnimation","_animatingSettings","_stopAnimation","_set","_animatingPrivateSettings","_stopAnimationPrivate","setPrivate","_setPrivate","_playingAnimations","_key","_markDirtyPrivateKey","_settingEvents","onPrivate","_privateSettingEvents","getRaw","_sendKeyEvent","_sendPrivateKeyEvent","_setRaw","_prevSettings","removeAll","getPrivate","_privateSettings","_setPrivateRaw","_prevPrivateSettings","setPrivateRaw","removePrivate","_animationTime","animatePrivate","Entity","isReal","templates","_createEvents","_root","_internalTemplates","_registerId","_template","_afterNew","shouldApply","_setObjectTemplate","_applyTemplates","_setDefaults","_afterNewApplyThemes","_applyThemes","classNames","className","_setDefault","_setRawDefault","_clearDirty","_dirty","_dirtyPrivate","isDirty","isPrivateDirty","isType","_pushPropertyDisposer","_disposerProperties","_disposeProperty","_removeObjectTemplate","_addDirtyEntity","_addAnimation","animationTime","_name","adapters","isUserSetting","_setSoft","_removeTemplateProperty","_userPrivateProperties","_removeTemplatePrivateProperty","_setTemplateProperty","_findTemplateByKey","_setTemplatePrivateProperty","_findTemplateByPrivateKey","_walkParents","_rootContainer","_applyStateByKey","other","_eachTemplate","_apply","_applyTemplate","_templateDisposers","privateSettings","_runSetup","setup","_findStaticTemplate","_templates","_disposeTemplates","_findTemplate","_removeTemplates","isConnected","defaults","themes","themeTags","Set","tags","tag","_defaultThemes","theme","concat","allRules","rules","_lookupRules","rule","every","_changed","_beforeChanged","prevId","entitiesById","_afterChanged","addDisposer","setTimeout","delay","removeDispose","clearTimeout","hasTag","addTag","removeTag","_t","locale","rest","language","translate","TemplateState","_stateChanged","TemplateStates","TemplateAdapters","Template","entities","_entities","RADIANS","DEGREES","precision","rounded","pow","fitToRange","angle","sin","cos","normalizeAngle","getArcBounds","cx","cy","startAngle","endAngle","radius","minX","MAX_VALUE","minY","maxX","maxY","bpoints","getArcPoint","fromAngle","toAngle","pt","y","arc","mergeBounds","bounds","bound","inBounds","point","SpriteEventDispatcher","sprite","_sprite","_makePointerEvent","originalEvent","simulated","native","_onRenderer","_rendererDisposers","rendererEvent","RENDERER_EVENTS","stopParentDispatch","_dispatchParents","dispatchParents","parent","isDragging","_hasDown","_hasMoved","_trustBounds","_getBounds","globalBounds","_renderer","removeHovering","Sprite","_addPercentagePositionChildren","markDirtyPosition","_removeTemplateField","_templateField","_processTemplateField","field","dataItem","dataContext","new","_setDataItem","oldDataItem","_dataItem","eventType","newDataItem","_parent","_addPercentageSizeChildren","_percentageSizeChildren","_percentagePositionChildren","_addDirtyPosition","updatePivotPoint","_localBounds","centerX","centerY","_handleStates","previous","tooltip","setLayer","markDirtyLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","isHover","showTooltip","_statesHandled","isHidden","markDirtyAccessibility","display","draggable","_dragDp","dragStart","dragMove","dragStop","cancelTouch","tooltipText","tooltipHTML","showTooltipOn","_tooltipDp","hideTooltip","toggleKey","_toggleDp","_isDragging","scale","visible","_prevWidth","_sizeDirty","_updateSize","wheelable","_registerTabindexOrder","_unregisterTabindexOrder","cursorOverStyle","_focusDp","exportable","_hoverDp","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","inactive","_dragEvent","_dragPoint","_downPoint","_downPoints","downPoint","dragEvent","dragPoint","hypot","getLocalBounds","depth","markDirtySize","_addDirtyBounds","isMeasured","invalidateBounds","isFocus","_invalidateAccessibility","_updateBounds","oldBounds","_adjustedLocalBounds","newBounds","_fixMinBounds","getAdjustedBounds","minWidth","minHeight","privateWidth","privateHeight","_removeParent","children","unhover","getTooltip","tooltipPosition","tooltipTarget","_setMatrix","toGlobal","_getTooltipPoint","label","width","height","markDirtyText","promise","show","timeout","hide","_updatePosition","dx","dy","_x","xx","yy","innerWidth","_y","innerHeight","_removeFocusElement","adjustedLocalBounds","localBounds","p0","p1","p2","p3","_onShow","_onHide","appear","success","_error","_isShowing","_isHidden","_isHiding","isShowing","isHiding","hovering","focused","isVisible","isVisibleDeep","compositeOpacity","opacity","maxWidth","w","maxHeight","_walkParent","updateChildren","prevParent","getNumberFormatter","numberFormatter","getDateFormatter","dateFormatter","getDurationFormatter","durationFormatter","toLocal","_getDownPoint","_getDownPointId","toFront","toBack","Pattern","makeGraphics","pattern","_pattern","_draw","_clear","repetition","fill","fillOpacity","_backgroundDisplay","beginFill","drawRect","endFill","createPattern","PicturePattern","_load","image","_image","patternWidth","patternHeight","fit","centered","src","Image","decode","catch","BlendMode","visualSettings","Graphics","crisp","gradient","gradientTarget","strokeDasharray","setLineDash","strokeDashoffset","setLineDashOffset","blendMode","NORMAL","draw","svgPath","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","shadow","changed","stops","colorInherited","opacityInherited","getFill","strokeOpacity","strokeWidth","resolution","lineJoin","lineStyle","endStroke","Rectangle","eachChildren","Layout","HorizontalLayout","updateContainer","paddingLeft","availableWidth","totalPercent","childWidth","prevX","marginLeft","marginRight","VerticalLayout","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","GridLayout","paddingRight","minCellWidth","maxCellWidth","columnCount","columnWidths","getColumnWidths","column","maxColumnHeight","totalWidth","TextFormatter","prefix","RegExp","quotedBlocks","noFormatting","escape","chunks","split","chunk","chunks2","i2","chunk2","cleanUp","unescape","isImage","fontWeight","textDecoration","populateString","getTagValue","tagName","parts","reg","prop","dateFields","numericFields","durationFields","method","params","matches2","reg2","getTagValueFromObject","component","getCustomDataValue","customData","current","formatApplied","part","tmp","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","Container","makeContainer","allChildren","_removeHTMLContent","interactiveChildren","_prevHeight","layout","contentMask","_contentMask","mask","updateBackground","background","verticalScrollbar","_contentHeight","bg","pWidth","pHeight","horizontal","vertical","m","paddingBottom","childBounds","childX","childY","cl","cr","ct","cb","_contentWidth","_addDirtyParent","_prepareChildren","fi","forceInactive","walkChildren","_updateChildren","html","_setHTMLContent","_positionHTMLElement","startGrip","endGrip","interfaceColors","_vsbd0","wheelEvent","preventDefault","shiftY","deltaY","_vsbd1","updated","Text","makeTextStyle","makeText","textStyle","_getText","updateTooltip","tooltipElement","_removeTooltipElement","wordWrapWidth","oversizedBehavior","breakWords","ellipsis","ignoreFormatting","minScale","_textStyles","styleName","Native","_observer","ResizeObserver","entries","entry","_targets","addTarget","observe","box","removeTarget","unobserve","Raf","_timer","lastTime","loop","now","newSize","getBoundingClientRect","size","requestAnimationFrame","cancelAnimationFrame","observer","makeSensor","ResizeSensor","_sensor","_element","_listener","sensor","InterfaceColors","Label","_text","_makeText","_textKeys","propValue","_setMaxDimentions","textAlign","rotation","getText","PointedRectangle","bwh","xtl","ytl","xtr","ytr","xbr","ybr","xbl","ybl","moveTo","stemX","lineTo","arcTo","stemY","closePath","Tooltip","_label","_updateBackground","_updateTextColor","tooltipContainer","htmlElement","_htmlContentHovered","_tooltips","labelText","labelHTML","updateBackgroundColor","keephover","_keepHoverDp","outEvent","getEvent","_fillDp","_strokeDp","_labelDp","alternative","cw","ch","parentW","parentH","layerMargin","_w","_h","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","_fx","_fy","animationDuration","animationEasing","NumberFormatter","bns","sns","bs","suffix","formatted","Intl","NumberFormat","details","parseFormat","positive","zero","mod","active","applyFormat","thousandSeparator","translateEmpty","decimalSeparator","_part","item","partFormat","mods","modSpacing","thousands","passive","interval","applyPrefix","ol","parseFloat","toPrecision","exp","toExponential","ints","ip","intsr","reverse","c","separator","decs","prefixes","force","newvalue","applied","k","parseDate","month","hour","minute","second","millisecond","formatToParts","toUTCDate","Timezone","DateTimeFormat","hour12","fractionalSecondDigits","_dtf","convertLocal","offset","offsetUTC","userOffset","setUTCMinutes","getUTCMinutes","newUserOffset","dtf","DateFormatter","locales","fullYear","minutes","seconds","milliseconds","timestamp","getUTCMonth","getUTCHours","getUTCSeconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","_getMonth","_getShortMonth","translateFunc","_getShortWeekday","_getWeekday","firstDayOfWeek","tz","tzh","tzm","toISOString","toUTCString","dateFormat","_months","_shortMonths","_weekdays","_shortWeekdays","parse","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","millisecondDigits","zone","iso","regex","resolveMonth","resolveShortMonth","isAm","ts","resolveTimezoneOffset","dir","originalOffset","isDefault","translateAll","list","DurationFormatter","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","dyear","asecond","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","dirs","absolute","_unitAliases","tstamp","toTimeStamp","unit","_toTimeUnit","_getUnitValue","code","maxValue","maxUnit","getValueUnit","currentUnit","ms","_getUnitValues","timeUnit","Language","en","prompt","translation","translateAny","setTranslationAny","localeTarget","setTranslationsAny","translations","Theme","setupDefaultRules","themeClass","_rules","ruleRaw","setColor","ic","DefaultTheme","horizontalLayout","verticalLayout","bind","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabled","passOptions","hue","lightness","colors","reuse","startIndex","interpolationDuration","interpolationEasing","tooltipX","tooltipY","setStateOnChildren","gap","colorOpacity","checkered","fillField","strokeField","nameField","layer","clickTarget","ariaChecked","focusable","ariaLabel","role","cornerRadiusBL","cornerRadiusTL","cornerRadiusBR","cornerRadiusTR","populateText","stepCount","fontFamily","fontSize","textType","inside","baseRadius","orientation","pointerBaseWidth","cornerRadius","shiftRadius","dRadius","dInnerRadius","locationX","locationY","getFillFromSprite","getStrokeFromSprite","autoTextColor","ariaValueMin","ariaValueMax","ariaLive","spikes","innerRadius","rotationStep","Matrix","tx","ty","setTransform","pivotX","pivotY","origin","applyInverse","append","matrix","a1","b1","c1","prepend","tx1","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","err","TypeError","TAU","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","xp","yp","approxUnitArc","ang1","ang2","tan","x1","y1","x2","y2","vectorAngle","ux","uy","vx","vy","sign","dot","acos","getArcCenter","px","py","largeArcFlag","sweepFlag","pxp","pyp","rxsq","rysq","pxpsq","pypsq","radicant","sqrt","centerxp","centeryp","vx1","vy1","vx2","vy2","arcToBezier","_ref2","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","lambda","_getArcCenter","_getArcCenter2","ratio","segments","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","assertBinary","distributeId","eachTargets","hitTarget","onPointerEvent","touches","changedTouches","isTainted","canvas","getContext","willReadFrequently","drawImage","getImageData","console","warn","clearCanvas","view","CanvasPivot","CanvasDisplayObject","renderer","_removeObject","getLayer","dirty","getCanvas","_layer","defaultLayer","margin","_ghostLayer","setMargin","layers","registerChildLayer","resizeLayer","resizeGhost","_addBounds","_bounds","_getColorId","_colorId","paintId","_isInteractive","_forceInteractive","_isInteractiveMask","_matrix","getLocalMatrix","_uMatrix","bn","_addEvent","_localMatrix","_transform","_transformMargin","_transformLayer","render","parentLayer","_omitTainted","ghostLayer","ghostContext","save","_runPath","clip","globalAlpha","compoundAlpha","_render","restore","tainted","_hovering","dragging","_dragging","some","shouldCancelTouch","tapToActivate","_touchActive","CanvasContainer","_children","_childLayers","deep","setPoint","Op","colorize","_context","_forceColor","addBounds","BeginPath","beginPath","BeginFill","forceColor","fillStyle","EndFill","clearShadow","EndStroke","LineStyle","strokeStyle","lineWidth","LineDash","dash","LineDashOffset","dashOffset","lineDashOffset","DrawRect","rect","DrawCircle","DrawEllipse","radiusX","radiusY","ellipse","Arc","anticlockwise","arcBounds","ArcTo","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","QuadraticCurveTo","quadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","CanvasGraphics","_operations","_pushOp","op","_fillAlpha","_hasShadows","_strokeAlpha","drawCircle","drawEllipse","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","layerDirty","globalCompositeOperation","renderDetached","CanvasText","_textInfo","_shared","direction","textBaseline","_prerender","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","style2","fontVariant","_measure","textVisible","line","_index","textChunks","fillText","thickness","getTextStyle","_ignoreFontWeight","rtl","truncate","wrap","refText","lines","currentStyle","styleRestored","lineInfo","ascent","metrics","_measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","currentFormat","currentFill","currentChunkWidth","currentVerticalAlign","currentDecoration","skipFurtherText","firstTextChunk","leftoverChunks","verticalAlign","chunkWidth","actualBoundingBoxLeft","actualBoundingBoxRight","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","_fitRatio","_originalScale","maxW","maxH","fallbackBreakWords","measureText","fakeMetrics","div","innerText","visibility","bbox","fontBoundingBoxAscent","fontBoundingBoxDescent","CanvasTextStyle","CanvasRadialText","_renderCircular","deltaAngle","inward","align","kerning","clockwise","shouldReverse","_textReversed","maxAngle","midAngle","textHeight","lineStartAngle","rotate","angleShift","charWidth","_measureCircular","chars","CanvasImage","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","CanvasRendererEvent","originalPoint","identifier","CanvasRenderer","GhostLayer","_patternCanvas","devicePixelRatio","setAttribute","_layerDom","exportableView","_touchActiveTimeout","_delayTouchDeactivate","prevent","obj","tapToActivateTimeout","debugGhostView","createLinearGradient","createRadialGradient","radius1","radius2","graphics","_patternContext","clearRect","makeRadialText","makePicture","resize","_calculatedWidth","_calculatedHeight","realWidth","realHeight","calculatedWidth","calculatedHeight","_realWidth","_realHeight","createDetachedLayer","CanvasLayer","getLayerByOrder","existingLayer","layerIndex","insertBefore","_dirtyLayers","_lastPointerMoveEvent","_dispatchGlobalMousemove","_colorMap","_adjustBoundingBox","DOMRect","adjustPoint","clientX","clientY","widthScale","heightScale","_getHitTarget","pixel","data","colorId","hit","_withEvents","dispatching","cleanup","disposed","_dispatchEventAll","interactionsEnabled","_dispatchEvent","dispatched","_dispatchMousedown","originalTarget","button","dragged","_mousedown","delete","_replacedCursorStyle","_dispatchGlobalMouseup","_dispatchDragMove","_dispatchDragEnd","clickevent","_dispatchDoubleClick","_dispatchWheel","_makeSharedEvent","_onPointerEvent","timer","_initEvent","mouseup","pointercancel","mousedown","mousemove","canvasWidth","canvasHeight","maxScale","maintainPixelRatio","canvases","forceRender","needRerender","exportableContext","extraX","extraY","clientWidth","clientHeight","domWidth","domHeight","_width","_height","rAF","fps","Root","accessible","_a11yD","useSafeResolution","HTMLElement","getElementById","rootElements","inner","tooltipContainerBounds","_tooltipContainerSettings","_inner","_updateComputedStyles","_init","moveDOM","childNodes","_initResizeSensor","_handleLogo","_logo","offsetWidth","offsetHeight","_showBranding","logo","open","_getRealSize","_getCalculatedSize","calculateSize","tabindex","rootContainer","htmlElementContainer","_htmlElementContainer","overflow","readerAlertElement","_readerAlertElement","focusElementContainer","_focusElementContainer","tooltipElementContainer","_tooltipElementContainer","keyCode","_isShift","shiftKey","focusedSprite","_focusedSprite","downEvent","dragOffsetX","dragOffsetY","_keyboardDragPoint","moveEvent","upEvent","group","items","_tabindexes","lastIndex","_startTicker","setThemes","_addTooltip","_hasLicense","_resizeSensorDisposer","autoResize","_focusElementDirty","_updateCurrentFocus","_runTickers","_tickers","_runAnimations","_animations","_runDirties","allParents","_isDirtyParents","_dirtyParents","uid","objects","_isDirty","depths","_dirtyBounds","_positionHTMLElements","dirtyPositions","_dirtyPositions","_renderFrame","_updateTick","_checkComputedStyles","_runTicker","_ticker","_paused","_runTickerNow","endTime","performance","updateTick","_markDirty","_markDirtyRedraw","eachFrame","markDirtyGlobal","_isDisposed","readerAlert","innerHTML","tooltipContainerSettings","_tooltip","_invalidateTabindexes","aindex","bindex","groups","_moveFocusElement","_makeFocusElement","_decorateFocusElement","_positionFocusElement","focusElement","removeAttribute","ariaOrientation","ariaValueNow","ariaValueText","ariaControls","getAttribute","tabIndex","_handleFocus","_handleBlur","_hideFocusElement","_focusNext","focusableElements","querySelectorAll","_makeTooltipElement","parentElement","documentPointToRoot","scaleWidth","scaleHeight","rootPointToDocument","styles","getComputedStyle","fontHash","_fontHash","_invalidateLabelBounds","licenses","_licenseApplied","_makeHTMLElement","boxSizing","_htmlEnabledContainers","setting","ListData","incrementRef","decrementRef","processor","processRow","DataItem","markDirtyValues","disposeDataItem","showDataItem","hideDataItem","Component","_dataItems","_data","_onDataClear","_updateFields","dataItems","_mainDataItems","_markDirtyGroup","_dataChanged","_makeDataItem","processDataItem","properties","bullets","_afterDataChange","valueFields","_valueFields","_valueFieldsF","fieldKey","workingKey","fields","_fields","_fieldsF","makeDataItem","pushDataItem","_valuesDirty","inited","_dataGrouped","sleep","timeUnitDurations","getNextUnit","getDuration","getIntervalDuration","getDateIntervalDuration","firstDateOfWeek","firstTime","checkChange","timeOne","timeTwo","dateOne","dateTwo","timeZoneOffset1","timeZoneOffset2","nextUnit","firstDate","timeZoneOffset","difference","unitCount","setTime","setUTCHours","setUTCSeconds","setUTCMilliseconds","setUTCMonth","wday","weekDay","newTimeZoneOffset","isNaN","tzoffset","parsedDate","newOffset","chooseInterval","gridCount","intervals","gridInterval","intervalDuration","Series","_handleBullets","bulletsContainer","endIndex","bullet","getDataItemById","_makeBullets","_shouldMakeBullet","bulletFunction","_makeBullet","series","_aggregatesCalculated","_selectionAggregatesCalculated","baseValueSeries","calculateAggregates","_dataProcessed","_calculateAggregates","_psi","_pei","markerRectangle","legendDataItem","updateLegendMarker","sum","absSum","low","high","close","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","_getBase","minValue","dataField","customFunction","propertyValue","logarithmic","log","LOG10E","neutral","_hideBullets","_positionBullets","_positionBullet","_bullet","_placeBulletsContainer","chart","_removeBulletsContainer","_getItemReaderLabel","_super","_sequencedShowHide","realDuration","updateLegendValue","valueLabel","txt","hoverDataItem","unhoverDataItem","RoundedRectangle","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","Legend","_new","itemContainers","themeTagsSelf","markers","labels","valueLabels","markerRectangles","makeItemContainer","itemContainer","makeMarker","marker","makeLabel","makeValueLabel","makeMarkerRectangle","useDefaultMarker","createLegendMarker","clickContainer","_addClickEvents","targetA","targetB","indexA","indexB","di","DataProcessor","_checkFeatures","_checkDates","_checkNumbers","_checkColors","_checkEmpty","_checkDeepFeatures","deepFields","where","steps","_checkDeep","processMany","row","lookupKey","_maybeToEmpty","_maybeToNumber","_maybeToDate","_maybeToColor","Button","icon","Scrollbar","_makeThumb","_makeButton","_addOrientationClass","_handleAnimation","_thumbBusy","thumb","newMiddle","newCoordinate","_startDown","_gripDown","_endDown","_thumbDown","_updateThumb","_updateGripsByThumb","updateGrips","grip","valueFunction","fromValue","toValue","x0","y0","thumbSize","ColorSet","reset","generateColors","pass","currentStep","HierarchyDefaultTheme","gridLayout","legendLabelText","legendValueText","downDepth","initialDepth","singleBranchOnly","maskContent","strength","distance","upDepth","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","topDepth","nodePadding","layoutAlgorithm","minWeightRatio","convergenceRatio","maxIterationCount","HierarchyNode","disableDataItem","enableDataItem","_clickDisposer","selectDataItem","node","eachAfter","that","nodes","n","eachBefore","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","leaves","links","hierarchy","Map","mapChildren","objectChildren","childs","Node","computeHeight","node_copy","copyData","prototype","descendants","Hierarchy","_tag","makeNode","childData","nodesContainer","_treeData","first","_makeHierarchyData","_rootNode","_updateValues","_updateVisuals","_zoom","_selectDataItem","_updateNodes","hierarchyNode","_updateNode","hierarchyChildren","hierarchyChild","_getDataItemById","childDataItem","_processDataItem","addChildData","childDataField","d3HierarchyNode","dataValue","valuePercent","d3HierarchyChild","childrenDataArray","hiddenState","maxDepth","disabledField","skipDisptach","_currentDownDepth","currentDepth","_handleSingle","LinkedHierarchyNode","_updateLinks","link","HierarchyLink","sourceNode","targetNode","Circle","LinkedHierarchy","circles","outerCircles","circle","outerCircle","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","_getPoint","_animatePositions","sourceLinks","lnk","targetLinks","linksContainer","_processLink","unlinkDataItems","_disposeLink","_handleUnlink","areLinked","linked","_link","_source","_target","noop","Dispatch","parseTypenames","typenames","types","typename","T","taskHead","taskTail","pokeDelay","clockLast","clockNow","clockSkew","clock","setFrame","clearNow","Timer","_call","_next","time","restart","timerFlush","wake","nap","poke","t0","t2","t1","clearInterval","setInterval","initialRadius","initialAngle","simulation","alphaMin","alphaDecay","alphaTarget","forces","stepper","random","lcg","tick","iterations","fx","fy","initializeNodes","initializeForce","initialize","randomSource","closest","cover","tree","xm","ym","j","leaf","_x0","_y0","_x1","_y1","addAll","xz","yz","z","visit","x3","y3","quads","retainer","defaultX","defaultY","quadtree","Quadtree","NaN","leaf_copy","treeProto","radii","xi","yi","ri","ri2","visitAfter","prepare","quad","rj","jiggle","constant","_nodes","_random","nodeById","nodeId","strengths","distances","bias","defaultStrength","initializeStrength","initializeDistance","distanceMin2","distanceMax2","theta2","accumulate","weight","distanceMin","distanceMax","theta","extent","ForceDirected","d3forceSimulation","_tick","updateNodePositions","restartSimulation","_updateForces","d3ForceNode","_nodesDirty","collisionForce","linkForce","_links","pl","d3node","linkDatum","getDistance","getStrength","d3Nodes","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","Chart","SerialChart","seriesContainer","_removeSeries","_processSeries","PercentDefaultTheme","alignLabels","location","startLocation","endLocation","sequencedInterpolation","expandDistance","valueIs","PercentChart","chartContainer","PieChart","wr","hr","innerBounds","mr","prevRadius","_maxRadius","seriesRadius","seriesInnerRadius","PercentSeries","_makeSlices","_makeLabels","_makeTicks","makeSlice","slicesContainer","slices","labelsContainer","makeTick","ticksContainer","ticks","_lLabels","_rLabels","_hLabels","valueHigh","valueLow","percentTotal","_arrange","_arrangeDown","_arrangeUp","_arrangeLeft","_arrangeRight","_getNextDown","labelTop","_getNextUp","labelBottom","labelLeft","labelRight","atan2","epsilon","pi","halfPi","tauEpsilon","strings","appendRound","Path","_append","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","a0","ccw","da","withPath","shape","RangeError","arcInnerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","padRadius","buffer","r0","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","ax","ay","bx","by","kc","lc","centroid","Slice","ix","iy","_generator","middleAngle","segmentedLine","firstGroup","firstPoint","points","Line","Tick","RadialText","RadialLabel","radiusPrivate","innerRadiusPrivate","labelAngle","_flipped","PieSeries","labelsTemplate","currentAngle","currentArc","labelRadius","pr","XYChartDefaultTheme","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","minGridDistance","minPosition","maxPosition","behavior","snapToSeriesBy","moveThreshold","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","fillRule","axisFill","gridIntervals","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","axis","endValue","baseInterval","baseValue","autoZoom","maskBullets","stackToNegative","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","connect","autoGapCount","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","XYChart","yAxesAndPlotContainer","plotsContainer","plotContainer","topPlotContainer","xAxes","yAxes","zoomOutButton","zoomOut","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","gridContainer","_unstack","_posXDp","_posYDp","xAxis","markDirtyExtremes","yAxis","snapToSeries","handleWheel","wheelX","wheelY","plotPoint","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","local","_downStartX","_downEndX","_downStartY","_downEndY","_panStart","_panEnd","_dispatchWheelAnimation","_isPanning","touchEvent","_movePoints","_handlePinch","scrollbarX","panStart","panEnd","scrollbarY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","initialDistance","currentDistance","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","tooltipDataItem","closestItem","minDistance","showDataItemTooltip","handleMove","_updateCursor","updateCursor","_addCursor","_colorize","_setChart","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","getTooltipText","rightAxesContainer","_handleZoomOut","_fixPosition","_markDirtyAxes","colorSet","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","_removeAxis","processChart","axisParent","gridParent","topGridParent","_updateChartLayout","processAxis","_handleAxisSelection","inPlot","otherCharts","_otherCharts","global","chartPlotContainer","documentPoint","chartRoot","hh","plotT","plotB","tooltips","closestPoint","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","prevBottom","Axis","axisHeader","axisRanges","_processAxisRange","ghostLabel","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_series","_createAssets","_rangesDirty","_prepareDataItem","above","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","_updateTooltipBounds","updateTooltipBounds","axisHeadersContainer","_toggleDataItem","makeGrid","makeAxisFill","_processBullet","axisBullet","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","gWidth","updateLabel","_cursorPosition","_snapToSeries","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","handleCursorShow","handleCursorHide","processSeriesDataItem","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","CategoryAxis","_itemMap","_handleRangeChange","_prepareAxisItems","startCategory","endCategory","baseAxis","otherAxis","startDataItem","endDataItem","hasValue","__valueXShowFields","__valueYShowFields","maxCount","MAX_SAFE_INTEGER","frequency","_frequency","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateFill","updateBullet","basePosition","getX","positionToCoordinate","getY","getDataItemPositionX","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","dataItemToPosition","axisPositionToIndex","_adjustPosition","fieldName","seriesDataItem","zoomToIndexes","zoomToCategories","AxisTick","Grid","AxisLabel","AxisRenderer","_handleThumbDown","_handleThumbUp","_handleThumbMove","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","toggleVisibility","updatedStart","updatedEnd","_positionTooltip","AxisRendererY","gridTemplate","point1","point2","axisChildren","positionToPoint","bulletPosition","previousBullet","previousSprite","fillDrawMethod","_lc","_ls","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","previousValue","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","_formatText","numberFormat","formatter","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","stepPower","decCount","valueToPosition","positionToValue","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","_cellLocation","axisLocation","stackToItem","getStackedXValueWorking","getStackedYValueWorking","cellEndValue","fixSmallStep","_fixMin","_fixMax","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","maxAdapted","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","power","_min","_max","strictMode","stepDivisor","maxPrecision","ceiledStep","minCount","extraDecimals","oldDiff","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","DateAxis","_setBaseInterval","_baseDuration","baseMainDuration","groupInterval","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","baseDuration","_dataSets","_valueYFields","_valueXFields","groupCallback","groupOriginals","previousTime","dataSetId","groupFieldValues","workingFields","prevNewDataItem","firstItem","roundedTime","groupKey","currentValue","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","modifiedDifference","newId","endIndex2","firstDataItem","lastDataItem","lastDate","_strictMode","_intervalDuration","_getM","nextGridUnit","formats","startTime","_updateDates","_date","openValue","closeValue","adjustPosition","diValue","nextItem","value1","value2","zoomToDates","positionToDate","dateToPosition","AxisRendererX","XYSeries","_removeAxisRange","_makeFieldNames","_valueXShowFields","_valueYShowFields","valueXFields","valueYFields","minBulletDistance","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","_handleMaskBullets","tooltipPositionX","tooltipFieldX","_tooltipFieldX","tooltipPositionY","tooltipFieldY","_tooltipFieldY","stacked","_stack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_stackDirty","_showBullets","_selectionProcessed","vcx","vcy","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mainContainer","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_stackedSeries","stackToItemKey","stackToSeries","stackValue","stackedToSeries","_axesDirty","_markDataSetDirty","getPoint","_shouldShowBullet","_positionX","_positionY","_handleDataSetChange","dataSet","mainDataItems","_markDirtyStack","stackedSeries","_skipped","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","_getTooltipTarget","_emptyDataItem","_shouldInclude","_position","resetExtremes","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","categoryAxis","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_updateGraphics","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","fitW","fitH","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","ColumnSeries","XYCursor","_drawLines","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","_handleLineMove","_line","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_toX","_toY","_handleMove","_handleCursorDown","_handleCursorUp","selection","_inPlot","rootPoint","_getPosition","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","_updateLines","_updateSelection","AnimatedTheme","components","mounted","bubbleTree","pieChart","ganttChart","xyChart","methods","am5","$refs","chartdiv","am5themes_animated","bubbleTreeJSON","am5hierarchy","valueField","categoryField","idField","linkWithField","piechartdiv","pieChartJSON","am5percent","ganttchartdiv","am5xy","fromDate","columnSettings","openValueXField","valueXField","categoryYField","templateField","xychartdiv","valueYField","categoryXField","xyChartJSON","staticRenderFns"],"sourceRoot":""}